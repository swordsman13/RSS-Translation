<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:wfw="http://wellformedweb.org/CommentAPI/"><channel><title>微软研究院博客 - 微软研究院</title><atom:link href="https://www.microsoft.com/en-us/research/blog/feed/?from=https%3A%2F%2Fresearch.microsoft.com%2Frss%2Fnews.xml&amp;type=rss" rel="self" type="application/rss+xml"></atom:link><link/> https://www.microsoft.com/en-us/research/blog/<description></description><lastbuilddate> 2023 年 12 月 6 日星期三 14:54:40 +0000</lastbuilddate><language> en-US</language><sy:updateperiod>每小时</sy:updateperiod><sy:updatefrequency>1</sy:updatefrequency><generator> https://wordpress.org/?v=6.4.1</generator><item><title> Microsoft 在 ESEC/FSE 2023 上：用于简化编码工作流程的人工智能技术</title><link/>https://www.microsoft.com/en-us/research/blog/microsoft-at-esec-fse-2023-ai-techniques-for-a-streamlined-coding-workflow/<dc:creator><![CDATA[Alyssa Hughes]]></dc:creator><pubDate> Wed, 06 Dec 2023 17:00:00 +0000</pubDate><category><![CDATA[Research Blog]]></category><guid ispermalink="false"> https://www.microsoft.com/en-us/research/blog/microsoft-at-esec-fse-2023-ai-techniques-for-a-streamlined-coding-workflow/ </guid><description><![CDATA[<p>探索旨在推进软件开发生命周期的最新人工智能创新。 AdaptivePaste 适应并优化 IDE 中粘贴的代码片段。 InferFix 可自动检测和修复错误。了解如何。</p><p> <a href="https://www.microsoft.com/en-us/research/blog/microsoft-at-esec-fse-2023-ai-techniques-for-a-streamlined-coding-workflow/">微软在 ESEC/FSE 2023 上的帖子：用于简化编码工作流程的人工智能技术</a>首先出现在<a href="https://www.microsoft.com/en-us/research">微软研究院</a>。</p> ]]>; </description><content:encoded><![CDATA[
<p class="has-text-align-center">这些研究论文在<a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://2023.esec-fse.org/" target="_blank" rel="noreferrer noopener"><strong><em>ACM 欧洲软件工程联合会议和软件工程基础研讨会</em></strong><span class="sr-only">（在新选项卡中打开）</span></a> (ESEC/FSE 2023)<strong><em>上发表</em></strong><strong><em>，这是软件工程领域的重要会议。</em></strong> </p><figure class="wp-block-image size-full"><img fetchpriority="high" decoding="async" width="1400" height="788" src="https://www.microsoft.com/en-us/research/uploads/prod/2023/12/ESEC_FSE-BlogHeroFeature-1400x788-1.jpg" alt="ESEC/FSE 2023 两篇关于蓝/绿渐变的论文：InterFix 和 AdaptivePaste" class="wp-image-988911" srcset="https://www.microsoft.com/en-us/research/uploads/prod/2023/12/ESEC_FSE-BlogHeroFeature-1400x788-1.jpg 1400w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/ESEC_FSE-BlogHeroFeature-1400x788-1-300x169.jpg 300w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/ESEC_FSE-BlogHeroFeature-1400x788-1-1024x576.jpg 1024w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/ESEC_FSE-BlogHeroFeature-1400x788-1-768x432.jpg 768w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/ESEC_FSE-BlogHeroFeature-1400x788-1-1066x600.jpg 1066w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/ESEC_FSE-BlogHeroFeature-1400x788-1-655x368.jpg 655w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/ESEC_FSE-BlogHeroFeature-1400x788-1-343x193.jpg 343w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/ESEC_FSE-BlogHeroFeature-1400x788-1-240x135.jpg 240w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/ESEC_FSE-BlogHeroFeature-1400x788-1-640x360.jpg 640w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/ESEC_FSE-BlogHeroFeature-1400x788-1-960x540.jpg 960w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/ESEC_FSE-BlogHeroFeature-1400x788-1-1280x720.jpg 1280w" sizes="(max-width: 1400px) 100vw, 1400px" /></figure><p>软件开发的实践不可避免地涉及处理错误和各种编码违规行为的挑战。当开发人员采用从网络或其他同行项目复制和粘贴代码片段的常见做法时，这些问题可能会变得更加明显。虽然这种方法可能提供快速解决方案，但它可能会带来许多潜在的复杂性，包括编译问题、错误，甚至开发人员代码库中的安全漏洞。</p><p>为了解决这个问题，微软的研究人员一直致力于推进软件开发生命周期的不同方面，从代码适应到自动错误检测和修复。在<a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://2023.esec-fse.org/" target="_blank" rel="noreferrer noopener">ESEC/FSE 2023 <span class="sr-only">（在新选项卡中打开）</span></a>上，我们介绍了两种旨在提高编码效率的技术。 AdaptivePaste 利用基于学习的方法在集成开发环境 (IDE) 中调整和完善粘贴的代码片段。 InferFix 是一个端到端程序修复框架，旨在自动检测和解决错误。该博客概述了这些技术。 </p><div class="border-bottom border-top border-gray-300 mt-5 mb-5 msr-promo text-center text-md-left alignwide" data-bi-aN="promo" data-bi-id="956157"><p class="msr-promo__label text-gray-800 text-center text-uppercase"><span class="px-4 bg-white display-inline-block font-weight-semibold small">微软研究院播客</span></p><div class="row pt-3 pb-4 align-items-center"><div class="msr-promo__media col-12 col-md-5"> <a class="bg-gray-300" href="https://www.microsoft.com/en-us/research/podcast/ai-frontiers-the-future-of-causal-reasoning-with-emre-kiciman-and-amit-sharma/" aria-label="AI Frontiers: The future of causal reasoning with Emre Kiciman and Amit Sharma" data-bi-cN="AI Frontiers: The future of causal reasoning with Emre Kiciman and Amit Sharma" target="_blank"><img decoding="async" class="w-100 display-block" src="https://www.microsoft.com/en-us/research/uploads/prod/2023/06/Amit_Emre_podcast_hero_feature_1400x788.jpg" /></a></div><div class="msr-promo__content p-3 px-5 col-12 col-md"><h2 class="h4">人工智能前沿：Emre Kiciman 和 Amit Sharma 的因果推理的未来</h2><p class="large">Emre Kiciman 和 Amit Sharma 讨论了他们的论文“因果推理和大型语言模型：打开因果关系的新领域”，以及该论文如何检验大型语言模型 (LLM) 的因果能力及其含义。 </p><div class="wp-block-buttons justify-content-center justify-content-md-start"><div class="wp-block-button"> <a href="https://www.microsoft.com/en-us/research/podcast/ai-frontiers-the-future-of-causal-reasoning-with-emre-kiciman-and-amit-sharma/" class="btn btn-brand glyph-append glyph-append-chevron-right" aria-label="Listen now" data-bi-cN="AI Frontiers: The future of causal reasoning with Emre Kiciman and Amit Sharma" target="_blank">现在听</a></div></div></div><!--/.msr-promo__content--></div><!--/.msr-promo__inner-wrap--><span id="label-external-link" class="sr-only" aria-hidden="true">在新选项卡中打开</span></div><!--/.msr-promo--><h2 class="wp-block-heading" id="adaptivepaste-intelligent-copy-paste-in-ide"> AdaptivePaste：IDE 中的智能复制粘贴</h2><p>开发人员普遍的做法是将粘贴的代码片段适应特定的用例。然而，当前的代码分析和完成技术，例如屏蔽语言建模和 CodeT5，在识别和调整这些片段中的变量标识符以使它们与周围的代码对齐方面没有达到可接受的准确性水平。在论文“ <a href="https://www.microsoft.com/en-us/research/publication/adaptivepaste-intelligent-copy-paste-in-ide/">AdaptivePaste：IDE 中的智能复制粘贴</a>”中，我们提出了一种基于学习的源代码适应方法，旨在捕获变量使用模式的有意义的表示。首先，我们引入了一个专门的数据流感知去混淆预训练目标，用于粘贴代码片段的适应。接下来，我们介绍基于 Transformer 的模型的两个变体：传统的单解码器模型和具有绑定权重的并行解码器模型。</p><figure class="wp-block-image aligncenter size-full"> <a href="https://www.microsoft.com/en-us/research/uploads/prod/2023/11/Figure1AdaptiveP.png"><img decoding="async" width="1435" height="490" src="https://www.microsoft.com/en-us/research/uploads/prod/2023/11/Figure1AdaptiveP.png" alt="描述 AdaptivePaste 架构的图表。从带有粘贴代码片段的程序开始，AdaptivePaste 提取与学习任务最相关的语法层次结构并确定优先级，分析数据流，然后对粘贴的代码进行匿名化。生成的程序作为神经模型的输入。输出被序列化为令牌序列。" class="wp-image-988494" srcset="https://www.microsoft.com/en-us/research/uploads/prod/2023/11/Figure1AdaptiveP.png 1435w, https://www.microsoft.com/en-us/research/uploads/prod/2023/11/Figure1AdaptiveP-300x102.png 300w, https://www.microsoft.com/en-us/research/uploads/prod/2023/11/Figure1AdaptiveP-1024x350.png 1024w, https://www.microsoft.com/en-us/research/uploads/prod/2023/11/Figure1AdaptiveP-768x262.png 768w, https://www.microsoft.com/en-us/research/uploads/prod/2023/11/Figure1AdaptiveP-240x82.png 240w" sizes="(max-width: 1435px) 100vw, 1435px" /></a><figcaption class="wp-element-caption">图 1. AdaptivePaste 架构。对于具有粘贴代码片段的程序，AdaptivePaste 会提取与学习任务最相关的语法层次结构并确定其优先级，分析数据流，并对粘贴代码片段中的变量标识符进行匿名化。生成的程序作为神经模型的输入。输出被序列化为令牌条目序列。</figcaption></figure><p> unidecoder 遵循标准的自回归解码器公式，将粘贴片段中的每个变量映射到上下文中的唯一符号或声明一个新变量。并行解码器为匿名粘贴片段中的每个匿名符号复制解码器，独立预测名称并对每个符号的输出分布进行因式分解。这可以通过显示高于指定阈值的模型预测并输出存在不确定性的“漏洞”来实现选择性代码片段适应。</p><p>为了建立用于粘贴代码片段适应的数据流感知的去混淆预训练目标，我们以整个代码标记的粒度将掩码符号分配给变量标识符。预先存在的代码上下文是未匿名的，允许模型关注范围中定义的现有标识符名称。</p><p>我们对 AdaptivePaste 的评估显示出有希望的结果。它成功改编了 Python 源代码片段，精确匹配精度为 67.8%。当我们分析置信度阈值对模型预测的影响时，我们观察到并行解码器转换器模型在选择性代码自适应设置中将精度提高到 85.9%。</p><h2 class="wp-block-heading" id="inferfix-end-to-end-program-repair-with-llms"> InferFix：利用法学硕士进行端到端程序修复</h2><p>解决软件缺陷占开发成本的很大一部分。为了解决这个问题，论文“ <a href="https://www.microsoft.com/en-us/research/publication/inferfix-end-to-end-program-repair-with-llms-over-retrieval-augmented-prompts/">InferFix：通过检索增强提示使用法学硕士进行端到端程序修复</a>”介绍了一个程序修复框架，该框架结合了最先进的静态分析器 Infer 的功能，Infer 是一个称为 Retriever 的语义检索器模型，以及称为 Generator 的基于转换器的模型，用于解决 Java 和 C# 中的关键安全性和性能错误。</p><p> Infer 静态分析器用于通过形式验证可靠地检测、分类和定位复杂系统中的关键错误。 Retriever 使用 Transformer 编码器模型在已知错误的大型数据集中搜索语义等效的错误和相应的修复。它使用对比学习目标进行训练，以擅长查找相同错误类型的相关示例。</p><p> Generator 采用 120 亿参数的 Codex 模型，根据监督的错误修复数据进行微调。为了增强其性能，提供给生成器的提示通过错误类型注释、错误上下文信息以及检索器从外部非参数存储器检索到的语义相似的修复进行了增强。生成器生成候选来修复错误。</p><figure class="wp-block-image aligncenter size-full"> <a href="https://www.microsoft.com/en-us/research/uploads/prod/2023/11/Fig2_InterFixFlow.png"><img decoding="async" width="1641" height="721" src="https://www.microsoft.com/en-us/research/uploads/prod/2023/11/Fig2_InterFixFlow.png" alt="描述 InferFix 方法工作流程的图表。从 Pull 请求开始，Infer Static Analyzer 进行错误检测、分类和本地化。随后，上下文提取收集错误和周围上下文的相关细节，然后检索器识别语义上相似的错误。该过程最后 LLM 生成器根据生成的提示提出修复建议。" class="wp-image-988497" srcset="https://www.microsoft.com/en-us/research/uploads/prod/2023/11/Fig2_InterFixFlow.png 1641w, https://www.microsoft.com/en-us/research/uploads/prod/2023/11/Fig2_InterFixFlow-300x132.png 300w, https://www.microsoft.com/en-us/research/uploads/prod/2023/11/Fig2_InterFixFlow-1024x450.png 1024w, https://www.microsoft.com/en-us/research/uploads/prod/2023/11/Fig2_InterFixFlow-768x337.png 768w, https://www.microsoft.com/en-us/research/uploads/prod/2023/11/Fig2_InterFixFlow-1536x675.png 1536w, https://www.microsoft.com/en-us/research/uploads/prod/2023/11/Fig2_InterFixFlow-240x105.png 240w" sizes="(max-width: 1641px) 100vw, 1641px" /></a><figcaption class="wp-element-caption">图 2：InferFix 工作流程。 Infer 静态分析器会检测到容易出错的代码修改，该分析器用于制作带有错误类型注释、位置信息、相关语法层次结构以及检索器识别的类似修复的提示。大型语言模型 (LLM) 生成器为开发人员提供了候选修复。</figcaption></figure><p>为了测试 InferFix，我们策划了一个名为<a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://github.com/microsoft/InferredBugs/" target="_blank" rel="noreferrer noopener">InferredBugs <span class="sr-only">（在新选项卡中打开）</span></a>的数据集，该数据集包含丰富的元数据，并包含通过在数千个 Java 和 C# 存储库上执行 Infer 静态分析器识别的错误。结果值得注意。 InferFix 的性能优于强大的 LLM 基线，在 InferredBugs 数据集上，C# 中的准确率达到了 65.6% 的 top-1，Java 中的准确率达到了令人印象深刻的 76.8%。</p><h2 class="wp-block-heading" id="looking-ahead">展望未来</h2><p>借助 AdaptivePaste 和 InferFix，我们希望显着简化编码流程，最大限度地减少错误并提高效率。这包括在添加代码片段时减少错误的引入，并提供自动错误检测、分类和补丁验证。我们相信这些工具有望增强软件开发工作流程，从而降低成本并全面提高项目效率。</p><p>展望未来，GPT-3.5 和 GPT-4 等法学硕士的快速发展激发了我们通过快速工程和其他方法探索如何利用其在错误管理方面的潜力的兴趣。我们的目标是通过简化错误检测和修复流程来增强开发人员的能力，促进更强大、更高效的开发环境。</p><span id="label-external-link" class="sr-only" aria-hidden="true">在新选项卡中打开</span><p><a href="https://www.microsoft.com/en-us/research/blog/microsoft-at-esec-fse-2023-ai-techniques-for-a-streamlined-coding-workflow/">微软在 ESEC/FSE 2023 上的帖子：用于简化编码工作流程的人工智能技术</a>首先出现在<a href="https://www.microsoft.com/en-us/research">微软研究院</a>。</p> ]]>;</content:encoded></item><item><title>研究重点：2023 年 12 月 4 日当周</title><link/>https://www.microsoft.com/en-us/research/blog/research-focus-week-of-december-4-2023/<dc:creator><![CDATA[Alyssa Hughes]]></dc:creator><pubDate> Wed, 06 Dec 2023 14:54:38 +0000</pubDate><category><![CDATA[Research Blog]]></category><guid ispermalink="false"> https://www.microsoft.com/en-us/research/?p=989127 </guid><description><![CDATA[<p>研究重点：在基于 Rust 的形式验证框架中使用法学硕士；根据用户反馈重新思考网络测量；使用 HoloportationTM 通信技术的 3D 远程医疗可以提高海外手术就诊率。</p><p> <a href="https://www.microsoft.com/en-us/research/blog/research-focus-week-of-december-4-2023/">《研究焦点：2023 年 12 月 4 日一周》一文</a>首先出现在<a href="https://www.microsoft.com/en-us/research">Microsoft Research</a>上。</p> ]]>; </description><content:encoded><![CDATA[
<figure class="wp-block-pullquote"><blockquote><p><em class="">欢迎来到研究焦点，这是一系列博客文章，重点介绍 Microsoft 研究社区的著名出版物、活动、代码/数据集、新员工和其他里程碑。</em> </p></blockquote></figure><figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1400" height="788" src="https://www.microsoft.com/en-us/research/uploads/prod/2023/12/RF30-BlogHeroFeature-1400x788-1.png" alt="研究重点 2023 年 12 月 6 日" class="wp-image-989349" srcset="https://www.microsoft.com/en-us/research/uploads/prod/2023/12/RF30-BlogHeroFeature-1400x788-1.png 1400w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/RF30-BlogHeroFeature-1400x788-1-300x169.png 300w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/RF30-BlogHeroFeature-1400x788-1-1024x576.png 1024w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/RF30-BlogHeroFeature-1400x788-1-768x432.png 768w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/RF30-BlogHeroFeature-1400x788-1-1066x600.png 1066w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/RF30-BlogHeroFeature-1400x788-1-655x368.png 655w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/RF30-BlogHeroFeature-1400x788-1-343x193.png 343w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/RF30-BlogHeroFeature-1400x788-1-240x135.png 240w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/RF30-BlogHeroFeature-1400x788-1-640x360.png 640w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/RF30-BlogHeroFeature-1400x788-1-960x540.png 960w, https://www.microsoft.com/en-us/research/uploads/prod/2023/12/RF30-BlogHeroFeature-1400x788-1-1280x720.png 1280w" sizes="(max-width: 1400px) 100vw, 1400px" /></figure><h3 class="wp-block-heading h6 has-blue-color has-text-color has-link-color wp-elements-a584a2137da4151ecbde93fba771f798" id="new-research">新研究</h3><h2 class="wp-block-heading" id="leveraging-large-language-models-for-automated-proof-synthesis-in-rust">利用大型语言模型在 Rust 中进行自动证明合成</h2><p>形式化验证或许可以保证关键系统软件的正确性，但高昂的举证负担长期以来阻碍了其广泛采用。最近，大型语言模型（LLM）在代码分析和综合方面取得了成功。在最近的一篇论文： <a href="https://www.microsoft.com/en-us/research/publication/leveraging-large-language-models-for-automated-proof-synthesis-in-rust/">Leveraging Large Language Models for Automated Proof Synthesis in Rust 中</a>，微软的研究人员提出了 LLM 和静态分析的结合，为基于 Rust 的形式验证框架（称为 Verus）综合不变量、断言和其他证明结构。</p><p>在几次设置中，GPT-4 在生成后置条件和循环不变量方面展示了令人印象深刻的逻辑能力，尤其是在分析短代码片段时。然而，GPT-4 并不能始终如一地保留和传播 Verus 所需的完整上下文信息，而这项任务可以通过静态分析直接完成。基于这些观察，研究人员开发了一个基于 OpenAI 的 GPT-4 模型的原型。该原型将验证任务分解为多个较小的任务，迭代查询 GPT-4，并将其输出与轻量级静态分析相结合。与开发人员一起在 20 个向量操作程序的自动化循环中评估原型表明，它显着减少了编写入门级证明代码的人力。 </p><div class="wp-block-buttons is-content-justification-center"><div class="wp-block-button is-style-outline"> <a data-bi-type="button" class="wp-block-button__link wp-element-button" href="https://www.microsoft.com/en-us/research/publication/leveraging-large-language-models-for-automated-proof-synthesis-in-rust/">阅读论文</a></div></div><div class="border-bottom border-top border-gray-300 mt-5 mb-5 msr-promo text-center text-md-left alignwide" data-bi-aN="promo" data-bi-id="980709"><p class="msr-promo__label text-gray-800 text-center text-uppercase"><span class="px-4 bg-white display-inline-block font-weight-semibold small">微软研究播客</span></p><div class="row pt-3 pb-4 align-items-center"><div class="msr-promo__media col-12 col-md-5"> <a class="bg-gray-300" href="https://www.microsoft.com/en-us/research/podcast/intern-insights-dr-madeleine-daepp-with-jennifer-scurrell-and-alejandro-cuevas/" aria-label="Intern Insights: Dr. Madeleine Daepp with Jennifer Scurrell and Alejandro Cuevas" data-bi-cN="Intern Insights: Dr. Madeleine Daepp with Jennifer Scurrell and Alejandro Cuevas" target="_blank"><img decoding="async" class="w-100 display-block" src="https://www.microsoft.com/en-us/research/uploads/prod/2023/10/Madeline_Insights_Hero_Feature_No_Text_1400x788-651ecfa4ebcf8.png" alt="MSR：播客实习生见解" /></a></div><div class="msr-promo__content p-3 px-5 col-12 col-md"><h2 class="h4">实习生见解：Madeleine Daepp 博士、Jennifer Scurrell 和 Alejandro Cuevas</h2><p class="large">在本集中，博士生<a href="https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fcss.ethz.ch%2Fen%2Fcenter%2Fpeople%2Fjennifer-victoria-scurrell.html&data=05%7C01%7Cv-amelfi%40microsoft.com%7Cdeb2b53d3b8d4c3a3ccf08dbbdec0d9e%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C638312593774254107%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=s8N98lzOV4kJIp2nzGFTx74SU%2BZQCxgXvyXGoIxk6S0%3D&reserved=0" target="_blank" rel="noreferrer noopener">Jennifer Scurrell</a>和<a href="https://www.alejandrocuevas.me/" target="_blank" rel="noreferrer noopener">Alejandro Cuevas</a>与高级研究员<a href="https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.microsoft.com%2Fen-us%2Fresearch%2Fpeople%2Fmdaepp%2F&data=05%7C01%7Cv-amelfi%40microsoft.com%7Cdeb2b53d3b8d4c3a3ccf08dbbdec0d9e%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C638312593774410340%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=PRbEab7C9R6Lv%2BwVQqz2Md1rE4WVmcPirGHNq9aqzYQ%3D&reserved=0" target="_blank" rel="noreferrer noopener">Madeleine Daepp 博士</a>进行了交谈。他们讨论了微软研究院的实习文化，从与研究人员联系的机会到他们所说的帮助他们取得成功的团队合作，以及他们希望对工作产生的影响。 </p><div class="wp-block-buttons justify-content-center justify-content-md-start"><div class="wp-block-button"> <a href="https://www.microsoft.com/en-us/research/podcast/intern-insights-dr-madeleine-daepp-with-jennifer-scurrell-and-alejandro-cuevas/" class="btn btn-brand glyph-append glyph-append-chevron-right" aria-label="Listen now" data-bi-cN="Intern Insights: Dr. Madeleine Daepp with Jennifer Scurrell and Alejandro Cuevas" target="_blank">现在听</a></div></div></div><!--/.msr-promo__content--></div><!--/.msr-promo__inner-wrap--><span id="label-external-link" class="sr-only" aria-hidden="true">在新选项卡中打开</span></div><!--/.msr-promo--><h3 class="wp-block-heading h6 has-blue-color has-text-color has-link-color wp-elements-21d8108ee594aad478409a8aa618b2ee" id="new-research-1">新研究</h3><h2 class="wp-block-heading" id="don-t-forget-the-user-it-s-time-to-rethink-network-measurements">不要忘记用户：是时候重新思考网络测量了</h2><p>网络测量的目标是表征网络的运行方式和性能。传统上，这意味着关注比特和字节——延迟和吞吐量等低级网络指标，其优点是客观，但代表性和范围有限。在最近的一篇论文《 <a href="https://www.microsoft.com/en-us/research/publication/dont-forget-the-user-its-time-to-rethink-network-measurements/">不要忘记用户：是时候重新思考网络测量》</a>中，微软的研究人员认为，用户还提供了丰富且基本上未开发的隐式和显式信号源，可以补充和扩展传统测量方法的覆盖范围。隐式反馈利用用户操作来间接推断网络性能以及由此产生的用户体验质量。显式反馈利用通常离线提供的用户输入来扩大网络测量的范围，特别是对于较新的网络测量。</p><p>研究人员分析了示例场景，包括通过用户操作捕获隐式反馈，例如用户在大型会议服务中将麦克风静音（取消）或打开/关闭摄像头。这些技术补充了现有的测量方法，并开辟了广泛的研究方向，从重新思考测量工具到设计以用户为中心的网络系统和应用程序。 </p><div class="wp-block-buttons is-content-justification-center"><div class="wp-block-button is-style-outline"> <a data-bi-type="button" class="wp-block-button__link wp-element-button" href="https://www.microsoft.com/en-us/research/publication/dont-forget-the-user-its-time-to-rethink-network-measurements/">阅读论文</a></div></div><hr class="wp-block-separator has-alpha-channel-opacity is-style-dots"/><h3 class="wp-block-heading h6 has-blue-color has-text-color has-link-color wp-elements-75529b6d98206e91a9b606ca9ac66e10" id="technology-update">技术更新</h3><h2 class="wp-block-heading" id="ghana-3d-international-telemedicine-proof-of-concept-study"> 加纳 3D 国际远程医疗概念验证研究</h2><p>实时 3D 远程医疗系统 – 利用 Holoportation <img src="https://s.w.org/images/core/emoji/14.0.0/72x72/2122.png" alt="™" class="wp-smiley" style="height: 1em; max-height: 1em;" />通信技术——用于在海外手术合作之前、期间和之后促进与复杂重建患者的咨询。该系统于 2022 年 11 月在英国 Canniesburn 整形外科中心和加纳 Korle Bu 教学医院国家重建整形外科和烧伤中心之间的<a href="https://www.microsoft.com/en-us/research/blog/3d-telemedicine-brings-better-care-to-underserved-and-rural-communities-even-across-continents/">概念验证诊所</a>中使用。</p><p>对加纳的四名患者进行了患者旅程跟踪（下颌成釉细胞瘤、大腿肉瘤、上颌肿瘤、背部肉瘤）。一份新报告： <a href="https://www.microsoft.com/en-us/research/publication/ghana-3d-telemedicine-international-mdt-a-proof-of-concept-study/">加纳 3D 远程医疗国际 MDT：概念验证研究</a>详细介绍了 13 名参与者（4 名患者、4 名加纳临床医生、5 名英国临床医生）对 3D 多学科团队 (MDT) 的完整反馈。结果指标的满意度为 84.31/100，感知效益为 4.54/5，总体质量为 127.3/147，可用性为 83.2/100。该数据与之前发布的高收入国家数据非常一致。</p><p>这项新技术有潜力通过改进规划、与患者进行知情讨论、对复杂病例达成专家共识以及促进与远在千里之外的专业人士的接触，来加强中低收入国家的海外手术就诊。 </p><div class="wp-block-buttons is-content-justification-center"><div class="wp-block-button is-style-outline"> <a data-bi-type="button" class="wp-block-button__link wp-element-button" href="https://www.microsoft.com/en-us/research/publication/ghana-3d-telemedicine-international-mdt-a-proof-of-concept-study/">阅读论文</a></div></div><hr class="wp-block-separator has-alpha-channel-opacity is-style-dots"/><span id="label-external-link" class="sr-only" aria-hidden="true">在新选项卡中打开</span><p><a href="https://www.microsoft.com/en-us/research/blog/research-focus-week-of-december-4-2023/">《研究焦点：2023 年 12 月 4 日一周》一文</a>首先出现在<a href="https://www.microsoft.com/en-us/research">Microsoft Research</a>上。</p> ]]>;</content:encoded></item></channel></rss>