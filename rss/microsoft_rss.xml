<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:wfw="http://wellformedweb.org/CommentAPI/"><channel><title>微软研究院博客 - 微软研究院</title><atom:link href="https://www.microsoft.com/en-us/research/blog/feed/?from=https%3A%2F%2Fresearch.microsoft.com%2Frss%2Fnews.xml&amp;type=rss" rel="self" type="application/rss+xml"></atom:link><link/> https://www.microsoft.com/en-us/research/blog/<description></description><lastbuilddate> 2025 年 1 月 14 日星期二 15:55:29 +0000</lastbuilddate><language> en-US</language><sy:updateperiod>每小时</sy:updateperiod><sy:updatefrequency>1</sy:updatefrequency><generator> https://wordpress.org/?v=6.7.1</generator><item><title> AutoGen v0.4：重新构想代理 AI 的规模、可扩展性和稳健性的基础</title><link/>https://www.microsoft.com/en-us/research/blog/autogen-v0-4-reimagining-the-foundation-of-agentic-ai-for-scale-extensibility-and-robustness/<dc:creator><![CDATA[Alyssa Hughes (2ADAPTIVE LLC dba 2A Consulting)]]></dc:creator><pubDate> Tue, 14 Jan 2025 14:33:09 +0000</pubDate><category><![CDATA[Research Blog]]></category><guid ispermalink="false"> https://www.microsoft.com/en-us/research/?p=1116288 </guid><description><![CDATA[<p>宣布推出 AutoGen 0.4，这是一个完全重新设计的库，用于构建先进的代理 AI 系统，旨在提高代码质量和稳健性。其异步、事件驱动的架构旨在支持动态、可扩展的工作流程。</p><p> <a href="https://www.microsoft.com/en-us/research/blog/autogen-v0-4-reimagining-the-foundation-of-agentic-ai-for-scale-extensibility-and-robustness/">AutoGen v0.4 博文：重新构想代理 AI 的规模、可扩展性和稳健性的基础</a>首先出现在<a href="https://www.microsoft.com/en-us/research">Microsoft Research</a>上。</p> ]]>; </description><content:encoded><![CDATA[
<figure class="wp-block-image size-large"><img fetchpriority="high" decoding="async" width="1024" height="576" src="https://www.microsoft.com/en-us/research/uploads/prod/2025/01/AutoGen-0.4-BlogHeroFeature-1400x788-1-1024x576.jpg" alt="v0.4 更新引入了一个有凝聚力的 AutoGen 生态系统，其中包括框架、开发人员工具和应用程序。该框架的分层架构清楚地定义了每一层的功能。它支持第一方和第三方应用程序和扩展。" class="wp-image-1120017" srcset="https://www.microsoft.com/en-us/research/uploads/prod/2025/01/AutoGen-0.4-BlogHeroFeature-1400x788-1-1024x576.jpg 1024w, https://www.microsoft.com/en-us/research/uploads/prod/2025/01/AutoGen-0.4-BlogHeroFeature-1400x788-1-300x169.jpg 300w, https://www.microsoft.com/en-us/research/uploads/prod/2025/01/AutoGen-0.4-BlogHeroFeature-1400x788-1-768x432.jpg 768w, https://www.microsoft.com/en-us/research/uploads/prod/2025/01/AutoGen-0.4-BlogHeroFeature-1400x788-1-1066x600.jpg 1066w, https://www.microsoft.com/en-us/research/uploads/prod/2025/01/AutoGen-0.4-BlogHeroFeature-1400x788-1-655x368.jpg 655w, https://www.microsoft.com/en-us/research/uploads/prod/2025/01/AutoGen-0.4-BlogHeroFeature-1400x788-1-240x135.jpg 240w, https://www.microsoft.com/en-us/research/uploads/prod/2025/01/AutoGen-0.4-BlogHeroFeature-1400x788-1-640x360.jpg 640w, https://www.microsoft.com/en-us/research/uploads/prod/2025/01/AutoGen-0.4-BlogHeroFeature-1400x788-1-960x540.jpg 960w, https://www.microsoft.com/en-us/research/uploads/prod/2025/01/AutoGen-0.4-BlogHeroFeature-1400x788-1-1280x720.jpg 1280w, https://www.microsoft.com/en-us/research/uploads/prod/2025/01/AutoGen-0.4-BlogHeroFeature-1400x788-1.jpg 1400w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure><p>在过去的一年里，我们在<a href="https://www.microsoft.com/en-us/research/project/autogen/" target="_blank" rel="noreferrer noopener">AutoGen</a>上的工作凸显了代理人工智能和多代理应用程序的变革潜力。今天，我们很高兴宣布 AutoGen v0.4，这是一个重要的里程碑，来自我们的用户和开发人员社区的见解。此更新代表了 AutoGen 库的彻底重新设计，旨在提高代理工作流程中的代码质量、稳健性、通用性和可扩展性。</p><p> <a href="https://www.microsoft.com/en-us/research/publication/autogen-enabling-next-gen-llm-applications-via-multi-agent-conversation-framework/" target="_blank" rel="noreferrer noopener">AutoGen</a>的最初版本引起了人们对代理技术的广泛兴趣。与此同时，用户还面临架构限制、快速增长导致的低效 API 以及有限的调试和干预功能等问题。反馈强调了对更强的可观察性和控制性、更灵活的多代理协作模式以及可重用组件的需求。 AutoGen v0.4 通过其<strong>异步、事件驱动的架构</strong>解决了这些问题。</p><p>此更新使 AutoGen 更加强大和可扩展，从而支持更广泛的代理场景。新框架包括以下功能，其灵感来自于 Microsoft 内部和外部的反馈。</p><ul class="wp-block-list"><li><strong>异步消息传递</strong>：代理通过异步消息进行通信，支持事件驱动和请求/响应交互模式。</li><li><strong>模块化和可扩展</strong>：用户可以使用可插入组件轻松定制系统，包括定制代理、工具、内存和模型。他们还可以使用事件驱动模式构建主动且长期运行的代理。</li><li><strong>可观察性和调试</strong>：内置指标跟踪、消息跟踪和调试工具提供对代理交互和工作流程的监视和控制，并支持 OpenTelemetry 以实现行业标准可观察性。</li><li><strong>可扩展和分布式</strong>：用户可以设计复杂的分布式代理网络，跨组织边界无缝运行。</li><li><strong>内置和社区扩展</strong>：扩展模块通过高级模型客户端、代理、多代理团队和代理工作流程工具增强了框架的功能。社区支持允许开源开发人员管理自己的扩展。</li><li><strong>跨语言支持</strong>：此更新支持使用不同编程语言构建的代理之间的互操作性，当前支持 Python 和 .NET 以及正在开发的其他语言。</li><li><strong>完整类型支持</strong>：接口在构建时强制执行类型检查，提高稳健性并保持代码质量。 </li></ul><div class="border-bottom border-top border-gray-300 mt-5 mb-5 msr-promo text-center text-md-left alignwide" data-bi-aN="promo" data-bi-id="1115760"><p class="msr-promo__label text-gray-800 text-center text-uppercase"><span class="px-4 bg-white display-inline-block font-weight-semibold small">微软研究播客</span></p><div class="row pt-3 pb-4 align-items-center"><div class="msr-promo__media col-12 col-md-5"> <a class="bg-gray-300" href="https://www.microsoft.com/en-us/research/podcast/neurips-2024-the-co-evolution-of-ai-and-systems-with-lidong-zhou/" aria-label="NeurIPS 2024: The co-evolution of AI and systems with Lidong Zhou" data-bi-cN="NeurIPS 2024: The co-evolution of AI and systems with Lidong Zhou" target="_blank"><img decoding="async" class="w-100 display-block" src="https://www.microsoft.com/en-us/research/uploads/prod/2024/12/Lidong-and-Eliza_Abstracts_Hero_Feature_No_Text_1400x788.jpg" alt="周立东和伊丽莎·斯特里克兰的头像插图" /></a></div><div class="msr-promo__content p-3 px-5 col-12 col-md"><h2 class="h4"> NeurIPS 2024：人工智能与系统的共同进化（周立东）</h2><p class="large">就在关于系统和人工智能共同进化的 NeurIPS 2024 主题演讲结束后，微软首席副总裁周立东加入播客，讨论快速发展的人工智能如何影响支持它的系统，以及使用人工智能增强系统工程本身的机会。 </p><div class="wp-block-buttons justify-content-center justify-content-md-start"><div class="wp-block-button"> <a href="https://www.microsoft.com/en-us/research/podcast/neurips-2024-the-co-evolution-of-ai-and-systems-with-lidong-zhou/" class="btn btn-brand glyph-append glyph-append-chevron-right" aria-label="Listen now" data-bi-cN="NeurIPS 2024: The co-evolution of AI and systems with Lidong Zhou" target="_blank">现在听</a></div></div></div><!--/.msr-promo__content--></div><!--/.msr-promo__inner-wrap--><span id="label-external-link" class="sr-only" aria-hidden="true">在新选项卡中打开</span></div><!--/.msr-promo--><h2 class="wp-block-heading" id="new-autogen-framework">新的 AutoGen 框架</h2><p>如图 1 所示，AutoGen 框架采用分层架构，在框架、开发人员工具和应用程序中明确定义职责。该框架包括三层：核心层、代理聊天层和第一方扩展层。</p><ul class="wp-block-list"><li><strong>核心：</strong>事件驱动代理系统的基础构建块。</li><li> <strong>AgentChat：</strong>建立在核心层上的任务驱动的高级 API，具有群聊、代码执行、预构建代理等功能。该层与<a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://github.com/microsoft/autogen/tree/0.2">AutoGen v0.2 <span class="sr-only">（在新选项卡中打开）</span></a>最相似，使其成为最容易迁移到的 API。</li><li><strong>扩展：</strong>核心接口和第三方集成的实现，例如Azure代码执行器和OpenAI模型客户端。 </li></ul><figure class="wp-block-image aligncenter size-full is-resized"><img decoding="async" width="865" height="530" src="https://www.microsoft.com/en-us/research/uploads/prod/2025/01/Fig1-v0.4.png" alt="图 1. v0.4 更新引入了一个有凝聚力的 AutoGen 生态系统，其中包括框架、开发人员工具和应用程序。该框架的分层架构清楚地定义了每一层的功能。它支持第一方和第三方应用程序和扩展。" class="wp-image-1116330" style="width:649px;height:auto" srcset="https://www.microsoft.com/en-us/research/uploads/prod/2025/01/Fig1-v0.4.png 865w, https://www.microsoft.com/en-us/research/uploads/prod/2025/01/Fig1-v0.4-300x184.png 300w, https://www.microsoft.com/en-us/research/uploads/prod/2025/01/Fig1-v0.4-768x471.png 768w, https://www.microsoft.com/en-us/research/uploads/prod/2025/01/Fig1-v0.4-240x147.png 240w" sizes="(max-width: 865px) 100vw, 865px" /><figcaption class="wp-element-caption">图 1. v0.4 更新引入了一个有凝聚力的 AutoGen 生态系统，其中包括框架、开发人员工具和应用程序。该框架的分层架构清楚地定义了每一层的功能。它支持第一方和第三方应用程序和扩展。</figcaption></figure><h2 class="wp-block-heading" id="developer-tools">开发者工具</h2><p>除了框架之外，AutoGen 0.4 还包括升级的编程工具和应用程序，旨在支持开发人员构建和试验 AutoGen。</p><p> <strong>AutoGen Bench：</strong>使开发人员能够通过测量和比较跨任务和环境的性能来对其代理进行基准测试。</p><p> <strong>AutoGen Studio：</strong>在 v0.4 AgentChat API 上重建，此低代码接口可实现 AI 代理的快速原型设计。它引入了一些新功能：</p><ul class="wp-block-list"><li><strong>实时代理更新：</strong>通过异步事件驱动消息实时查看代理操作流。</li><li><strong>执行中期控制：</strong>暂停对话、重定向座席操作并调整团队组成。然后无缝恢复任务。</li><li><strong>通过 UI 进行交互式反馈：</strong>添加 UserProxyAgent，以便在团队运行期间实时进行用户输入和指导。</li><li><strong>消息流可视化：</strong>通过映射消息路径和依赖关系的直观可视化界面了解代理通信。</li><li><strong>拖放团队构建器：</strong>使用界面直观地设计代理团队，将组件拖放到适当位置并配置其关系和属性。</li><li><strong>第三方组件库：</strong>导入并使用外部库中的自定义代理、工具和工作流程来扩展功能。</li></ul><p> <strong><a href="https://www.microsoft.com/en-us/research/articles/magentic-one-a-generalist-multi-agent-system-for-solving-complex-tasks/">Magentic-One</a> ：</strong>一种新的通用多代理应用程序，用于解决跨各个领域的开放式 Web 和基于文件的任务。该工具标志着创建能够完成工作和个人环境中常见任务的代理的重要一步。</p><h2 class="wp-block-heading" id="migrating-to-autogen-v0-4">迁移到 AutoGen v0.4</h2><p>我们采取了多项措施来促进之前 v0.2 API 的平滑升级，解决底层架构的核心差异。</p><p>首先，AgentChat API 保持与 v0.2 相同的抽象级别，从而可以轻松地将现有代码迁移到 v0.4。例如，AgentChat 提供了 AssistantAgent 和 UserProxy 代理，其行为与 v0.2 中的类似。它还提供了一个团队接口，其中包含 RoundRobinGroupChat 和 SelectorGroupChat 等实现，涵盖了 v0.2 中 GroupChat 类的所有功能。此外，v0.4 引入了许多新功能，例如流消息、改进的可观察性、保存和恢复任务进度以及从中断处恢复暂停的操作。</p><p>有关详细指导，请参阅<a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://aka.ms/autogen-migrate" target="_blank" rel="noreferrer noopener">迁移指南<span class="sr-only">（在新选项卡中打开）</span></a> 。</p><h2 class="wp-block-heading" id="looking-forward">期待</h2><p>这一新版本为强大的生态系统奠定了基础，并为推动代理人工智能应用和研究的进步奠定了坚实的基础。我们的路线图包括发布 .NET 支持、针对具有挑战性的领域引入内置且设计良好的应用程序和扩展，以及培育社区驱动的生态系统。我们仍然致力于负责任地开发 AutoGen 及其不断发展的功能。</p><p>我们鼓励您在<a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://aka.ms/autogen-discord" target="_blank" rel="noreferrer noopener">AutoGen 的 Discord 服务器<span class="sr-only">（在新选项卡中打开）</span></a>上与我们互动，并通过 GitHub 问题分享官方<a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://github.com/microsoft/autogen" target="_blank" rel="noreferrer noopener">AutoGen 存储库<span class="sr-only">（在新选项卡中打开）</span></a>的反馈。  通过<a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://x.com/pyautogen?t=1Zp7y4T18NCrGP9TuLZoJg&s=09" target="_blank" rel="noreferrer noopener">X <span class="sr-only">（在新选项卡中打开）</span></a>频繁了解 AutoGen 更新。</p><h2 class="wp-block-heading" id="acknowledgments">致谢</h2><p>我们要感谢许多个人，他们的想法和见解帮助正式确定了本版本中引入的概念，包括<a href="https://www.microsoft.com/en-us/research/people/ranaras/" target="_blank" rel="noreferrer noopener">Rajan Chari</a> 、 <a href="https://www.microsoft.com/en-us/research/people/eckamar/" target="_blank" rel="noreferrer noopener">Ece Kamar</a> 、 <a href="https://www.microsoft.com/en-us/research/people/jcl/" target="_blank" rel="noreferrer noopener">John Langford</a> 、 <a href="https://www.microsoft.com/en-us/research/people/chinganc/" target="_blank" rel="noreferrer noopener">Ching-An Chen</a> 、Bob West、Paul Minero、Safoora Yousefi、Will Epperson、Grace Proebsting 、张恩浩和吴恩达。</p><span id="label-external-link" class="sr-only" aria-hidden="true">在新选项卡中打开</span><p><a href="https://www.microsoft.com/en-us/research/blog/autogen-v0-4-reimagining-the-foundation-of-agentic-ai-for-scale-extensibility-and-robustness/">AutoGen v0.4 博文：重新构想代理 AI 的规模、可扩展性和稳健性的基础</a>首先出现在<a href="https://www.microsoft.com/en-us/research">Microsoft Research</a>上。</p> ]]>;</content:encoded></item><item><title> AIOpsLab：为自主云构建人工智能代理</title><link/>https://www.microsoft.com/en-us/research/blog/aiopslab-building-ai-agents-for-autonomous-clouds/<dc:creator><![CDATA[Brenda Potts]]></dc:creator><pubDate> Fri, 20 Dec 2024 23:56:03 +0000</pubDate><category><![CDATA[Research Blog]]></category><guid ispermalink="false"> https://www.microsoft.com/en-us/research/?p=1104735 </guid><description><![CDATA[<p> AIOpsLab 是一个开源框架，旨在评估和改进云操作的人工智能代理，为实际测试提供标准化、可扩展的基准，增强云系统的可靠性。</p><p> <a href="https://www.microsoft.com/en-us/research/blog/aiopslab-building-ai-agents-for-autonomous-clouds/">《AIOpsLab：为自主云构建 AI 代理》</a>一文首先出现在<a href="https://www.microsoft.com/en-us/research">Microsoft Research</a>上。</p> ]]>; </description><content:encoded><![CDATA[
<figure class="wp-block-image size-full"><img decoding="async" width="1400" height="788" src="https://www.microsoft.com/en-us/research/uploads/prod/2024/12/AIOps-Lab-BlogHeroFeature-1400x788-1.png" alt="图形用户界面、应用程序、图标" class="wp-image-1112118" srcset="https://www.microsoft.com/en-us/research/uploads/prod/2024/12/AIOps-Lab-BlogHeroFeature-1400x788-1.png 1400w, https://www.microsoft.com/en-us/research/uploads/prod/2024/12/AIOps-Lab-BlogHeroFeature-1400x788-1-300x169.png 300w, https://www.microsoft.com/en-us/research/uploads/prod/2024/12/AIOps-Lab-BlogHeroFeature-1400x788-1-1024x576.png 1024w, https://www.microsoft.com/en-us/research/uploads/prod/2024/12/AIOps-Lab-BlogHeroFeature-1400x788-1-768x432.png 768w, https://www.microsoft.com/en-us/research/uploads/prod/2024/12/AIOps-Lab-BlogHeroFeature-1400x788-1-1066x600.png 1066w, https://www.microsoft.com/en-us/research/uploads/prod/2024/12/AIOps-Lab-BlogHeroFeature-1400x788-1-655x368.png 655w, https://www.microsoft.com/en-us/research/uploads/prod/2024/12/AIOps-Lab-BlogHeroFeature-1400x788-1-240x135.png 240w, https://www.microsoft.com/en-us/research/uploads/prod/2024/12/AIOps-Lab-BlogHeroFeature-1400x788-1-640x360.png 640w, https://www.microsoft.com/en-us/research/uploads/prod/2024/12/AIOps-Lab-BlogHeroFeature-1400x788-1-960x540.png 960w, https://www.microsoft.com/en-us/research/uploads/prod/2024/12/AIOps-Lab-BlogHeroFeature-1400x788-1-1280x720.png 1280w" sizes="(max-width: 1400px) 100vw, 1400px" /></figure><p>在日益复杂的数字环境中，企业和云提供商在复杂 IT 应用程序的开发、部署和维护方面面临着重大挑战。微服务和基于云的无服务器架构的广泛采用简化了应用程序开发的某些方面，同时引入了许多操作困难，特别是在故障诊断和缓解方面。这些复杂性可能会导致中断，从而有可能导致重大业务中断，这凸显了对确保云服务高可用性和可靠性的强大解决方案的迫切需求。随着对“五个九”可用性的期望不断增长，组织必须应对错综复杂的运营需求网络，以保持客户满意度和业务连续性。</p><p>为了应对这些挑战，最近关于使用 AIOps 代理进行云操作的研究（例如用于事件根本原因分析 (RCA) 或分类的 AI 代理）依赖于专有服务和数据集。其他先前的工作使用特定于他们正在构建的解决方案的框架，或者无法捕获现实世界云服务的动态性质的<em>临时</em>和静态基准和指标。使用 Azure AI 代理服务开发云操作任务代理的用户可以使用 AIOpsLab 对其进行评估和改进。此外，当前的方法并未就操作任务的标准指标或标准分类达成一致。<strong>这就需要一个标准化、有原则的研究框架来构建、测试、比较和改进 AIOps 代理。</strong>该框架应允许代理以可重复的方式与实际的服务操作任务进行交互。它必须能够灵活地扩展到新的应用程序、工作负载和故障。重要的是，它不应该仅仅评估人工智能代理并使用户能够自行改进代理；例如，通过提供足够的可观察性，甚至充当训练环境（“健身房”）来生成要学习的样本。</p><p>我们开发了 AIOpsLab，这是一个为研究人员和开发人员提供的整体评估框架，用于实现 AIOps 代理的设计、开发、评估和增强，同时还可以实现可重复、标准化、可互操作和可扩展的基准测试。 AIOpsLab 在<a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://github.com/microsoft/AIOpsLab/">GitHub 上开源<span class="sr-only">（在新选项卡中打开）</span></a>并获得 MIT 许可证，以便研究人员和工程师可以利用它大规模评估 AIOps 代理。我们最近在 SoCC &#39;24 上发布了<a href="https://www.microsoft.com/en-us/research/publication/building-ai-agents-for-autonomous-clouds-challenges-and-design-principles/">AIOpsLab 愿景论文<span class="sr-only">（在新选项卡中打开）</span></a> 。有关 AIOpsLab 框架的更多详细信息，请参阅<a href="https://www.microsoft.com/en-us/research/publication/aiopslab-a-holistic-framework-for-evaluating-ai-agents-for-enabling-autonomous-cloud/">p <span class="sr-only">（在新选项卡中打开）</span></a> <a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.microsoft.com%2Fen-us%2Fresearch%2Fpublication%2Faiopslab-a-holistic-framework-for-evaluating-ai-agents-for-enabling-autonomous-cloud%2F&data=05%7C02%7Cv-ammelfi%40microsoft.com%7C15e1c8275ce94c4d841708dd221f279e%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C638704239499493512%7CUnknown%7CTWFpbGZsb3d8eyJFbXB0eU1hcGkiOnRydWUsIlYiOiIwLjAuMDAwMCIsIlAiOiJXaW4zMiIsIkFOIjoiTWFpbCIsIldUIjoyfQ%3D%3D%7C0%7C%7C%7C&sdata=kW3o2Gc8EPjJJZuDrZGpqDDqIEoT%2F6sv9QZ%2B0f5BTM8%3D&reserved=0">重印<span class="sr-only">（在新选项卡中打开）</span></a> 。 </p><figure class="wp-block-image aligncenter size-full"><img loading="lazy" decoding="async" width="1400" height="612" src="https://www.microsoft.com/en-us/research/uploads/prod/2024/11/AIOps-Lab_blog_fig1-overview_1400.jpg" alt="AIOpsLab 系统的流程图。该图表分为四个主要部分：AIOps 任务、Orchestrator、问题缓存和服务。 AIOps 任务列出了各种应用程序，例如社交网络、酒店预订、电子商务等，每个应用程序都具有关联的数据、操作和指标。这些任务连接到 Orchestrator。 Orchestrator 是中心元素，与各种组件交互：它接收问题查询 Q，详细说明问题、任务 T、工作负载 W、故障 F 和解决方案 S。它还负责部署或运行​​工作负载并注入故障根据代理转发的服务状态采取行动。问题缓存连接到工作负载生成器和故障生成器，为服务创建工作负载 W。服务组件通过跟踪、指标和日志显示可观察性。它与 Orchestrator 通信以提供服务状态更新。这些组件通过箭头连接，指示系统各部分之间的数据流和控制流。" class="wp-image-1106274" srcset="https://www.microsoft.com/en-us/research/uploads/prod/2024/11/AIOps-Lab_blog_fig1-overview_1400.jpg 1400w, https://www.microsoft.com/en-us/research/uploads/prod/2024/11/AIOps-Lab_blog_fig1-overview_1400-300x131.jpg 300w, https://www.microsoft.com/en-us/research/uploads/prod/2024/11/AIOps-Lab_blog_fig1-overview_1400-1024x448.jpg 1024w, https://www.microsoft.com/en-us/research/uploads/prod/2024/11/AIOps-Lab_blog_fig1-overview_1400-768x336.jpg 768w, https://www.microsoft.com/en-us/research/uploads/prod/2024/11/AIOps-Lab_blog_fig1-overview_1400-240x105.jpg 240w" sizes="auto, (max-width: 1400px) 100vw, 1400px" /><figcaption class="wp-element-caption">图1.AIOpsLab系统架构。</figcaption></figure><h2 class="wp-block-heading" id="agent-cloud-interface-aci">代理-云接口 (ACI)</h2><p> AIOpsLab 使用中间编排器严格分离代理和应用程序服务。它提供了多个接口供其他系统部分集成和扩展。首先，它与代理建立会话以共享有关基准测试问题的信息：(1) 问题描述，(2) 说明（例如响应格式），以及 (3) 可以作为操作调用的可用 API。</p><p> API 是一组记录的工具，例如获取日志、获取指标和exec shell，旨在帮助代理解决任务。代理实施没有任何限制；协调器提出问题并轮询它以根据先前的结果执行下一个操作。每个操作都必须是有效的 API 调用，由协调器验证并执行。协调器具有对部署的特权访问权限，并且可以使用适当的工具（例如，helm、kubectl）采取任意操作（例如，扩展、重新部署）来代表代理解决问题。最后，编排器调用工作负载和故障生成器来创建服务中断，作为实时基准问题。 AIOpsLab 提供了额外的 API 来扩展到新的服务和生成器。 </p><hr class="wp-block-separator has-alpha-channel-opacity"/><h3 class="wp-block-heading h5" id="example-shows-how-to-onboard-an-agent-to-aiopslab">示例展示了如何将代理加入 AIOpsLab </h3><div style="height:15px" aria-hidden="true" class="wp-block-spacer"></div><div class="wp-block-syntaxhighlighter-code "><pre class="brush: python; gutter: false; title: ; notranslate">
from aiopslab import Orchestrator
class Agent:
    def __init__(self, prob, instructs, apis):
        self.prompt = self.set_prompt(prob, instructs, apis)
        self.llm = GPT4()

    async def get_action(self, state: str) -> str:
        return self.llm.generate(self.prompt + state)

#initialize the orchestrator
orch = Orchestrator()
pid = "misconfig_app_hotel_res-mitigation-1"
prob_desc, instructs, apis = orch.init_problem(pid)

#register and evaluate the agent
agent = Agent(prob_desc, instructs, apis)
orch.register_agent(agent, name="myAgent")
asyncio.run(orch.start_problem(max_steps=10))
</pre></div><hr class="wp-block-separator has-alpha-channel-opacity"/><h2 class="wp-block-heading" id="service">服务</h2><p>AIOpsLab 抽象了一组不同的服务来反映生产环境的差异。这包括使用各种架构原则（包括微服务、无服务器和单体）实现的实时运行服务。</p><p>我们还利用 DeathStarBench 等开源应用程序套件，因为它们提供源代码和提交历史记录等工件以及运行时遥测。添加 BluePrint 等工具可以帮助 AIOpsLab 扩展到其他学术和生产服务。</p><h2 class="wp-block-heading" id="workload-generator">工作负载生成器</h2><p>AIOpsLab 中的工作负载生成器通过创建故障场景和正常场景的模拟发挥着至关重要的作用。它从协调器接收规范，例如任务、期望的效果、规模和持续时间。生成器可以使用在实际生产跟踪上训练的模型来生成符合这些规范的工作负载。受真实事件的启发，错误场景可能会模拟资源耗尽等条件、利用边缘情况或触发级联故障。正常场景模仿典型的生产模式，例如日常活动周期和多用户交互。当各种特征（例如，服务调用、用户分布、到达时间）可以产生期望的效果时，可以将多个工作负载存储在问题缓存中以供编排器使用。与故障生成器配合，工作负载生成器还可以使用工作负载创建复杂的故障场景。</p><h2 class="wp-block-heading" id="fault-generator">故障发生器</h2><p>AIOpsLab 拥有一款新颖的按钮式故障生成器，专为跨各种云场景的通用适用性而设计。我们的方法集成了应用程序和领域知识，以创建与 AIOps 场景兼容的适应性策略和“预言机”。这包括细粒度的故障注入，能够模拟由生产事件引发的复杂故障。此外，它可以在各个系统级别注入故障，暴露根本原因，同时保持语义完整性并考虑云微服务之间的相互依赖性。故障注入器的多功能性可以通过对 AIOps 功能进行全面测试和评估来增强云系统的可靠性和稳健性。 </p><div class="border-bottom border-top border-gray-300 mt-5 mb-5 msr-promo text-center text-md-left alignwide" data-bi-aN="promo" data-bi-id="670821"><p class="msr-promo__label text-gray-800 text-center text-uppercase"><span class="px-4 bg-white display-inline-block font-weight-semibold small">焦点：微软研究通讯</span></p><div class="row pt-3 pb-4 align-items-center"><div class="msr-promo__media col-12 col-md-5"> <a class="bg-gray-300" href="https://info.microsoft.com/ww-landing-microsoft-research-newsletter.html" aria-label="Microsoft Research Newsletter" data-bi-cN="Microsoft Research Newsletter" target="_blank"><img decoding="async" class="w-100 display-block" src="https://www.microsoft.com/en-us/research/uploads/prod/2019/09/Newsletter_Banner_08_2019_v1_1920x1080.png" alt="" /></a></div><div class="msr-promo__content p-3 px-5 col-12 col-md"><h2 class="h4">微软研究院通讯</h2><p class="large">与 Microsoft 研究社区保持联系。 </p><div class="wp-block-buttons justify-content-center justify-content-md-start"><div class="wp-block-button is-style-fill-chevron"> <a href="https://info.microsoft.com/ww-landing-microsoft-research-newsletter.html" class="btn btn-brand glyph-append glyph-append-chevron-right" aria-label="Microsoft Research Newsletter" data-bi-cN="Microsoft Research Newsletter" target="_blank">立即订阅</a></div></div></div><!--/.msr-promo__content--></div><!--/.msr-promo__inner-wrap--><span id="label-external-link" class="sr-only" aria-hidden="true">在新选项卡中打开</span></div><!--/.msr-promo--><h2 class="wp-block-heading" id="observability">可观察性</h2><p>AIOpsLab 配备了可扩展的可观察层，旨在为任何 AIOps 工具提供跨各个系统层的全面监控功能。 AIOpsLab 收集广泛的遥测数据，包括 (1) 来自 Jaeger 的跟踪，详细说明通过分布式系统的请求的端到端路径，(2) 由 Filebeat 和 Logstash 格式化和记录的应用程序日志，以及 (3) 监控的系统指标由普罗米修斯。此外，AIOpsLab 还捕获较低级别的系统信息，例如系统调用日志和集群信息。如前所述，我们通过灵活的 API 处理潜在的数据过载，以调整与 AIOps 工具相关的遥测数据。</p><p> AIOpsLab 目前支持 AIOps 领域内的四项关键任务。这些任务包括事件检测、定位、根本原因诊断和缓解。此外，我们还支持多种流行的代理框架：React、Autogen 和 TaskWeaver。该研究的两个关键见解强调了可观察性和精心设计的 ACI 的重要性。可观察性对于明确的根本原因诊断至关重要，例如，查明配置错误的 API 网关对于防止服务停机至关重要。</p><p>灵活性是另一个关键因素；执行任意 shell 命令的能力允许在实时场景中进行有效的故障排除。最后，强大的错误处理至关重要——为代理提供有关执行障碍（例如失败的数据库连接）的高质量反馈，确保快速解决和持续改进。 </p><hr class="wp-block-separator has-alpha-channel-opacity"/><h3 class="wp-block-heading h5" id="example-of-aci-on-diagnosis-task"> ACI 诊断任务示例</h3><div style="height:15px" aria-hidden="true" class="wp-block-spacer"></div><div class="wp-block-columns is-layout-flex wp-container-core-columns-is-layout-1 wp-block-columns-is-layout-flex"><div class="wp-block-column is-layout-constrained wp-container-core-column-is-layout-1 wp-block-column-is-layout-constrained" style="flex-basis:100%"><pre class="wp-block-code"> <code><span style="color:blue;">Agent:</span> I need to first look at the logs to understand <span style="color:purple;">if</span> there are any errors <span style="color:blue;">or</span> warnings that could indicate problems. <span style="color:blue;">Action:</span> ``` get_logs( <span style="color:red;">&quot;compose-post-service&quot;</span> , <span style="color:red;">&quot;test-social-network&quot;</span> ) ``` <span style="color:blue;">Service:</span> [ <span style="color:green;">2024-Aug-04 23:18:49.365494</span> ] &lt;info>;: … <span style="color:blue;">Thrift:</span> <span style="color:green;">Sun Aug 4 23:19:19 2024</span> TSocket::open() connect()</code> &lt;主机：用户服务端口：9090>;：连接被拒绝</mark>
 
<span style="color:blue;">代理：</span> ...无法连接到端口<span style="color:green;">9090</span>上的<span style="color:red;">“用户服务”</span> ，即使 pod 正在运行。<mark style="background-color:#ffb900" class="has-inline-color">这表明服务发现中可能存在网络问题或配置错误</mark></pre></div></div><hr class="wp-block-separator has-alpha-channel-opacity"/><h2 class="wp-block-heading" id="next-steps">后续步骤</h2><p>该研究项目采用 Microsoft 安全标准和 Responsible AI 原则，我们预计该研究将发展成为旨在优化 IT 运营的组织的重要资源。此外，我们计划与各种生成式人工智能团队合作，将 AIOpsLab 作为评估最先进模型的基准场景。通过这样做，我们的目标是促进创新并鼓励开发更先进的 AIOps 解决方案。这项研究不仅对 IT 专业人员至关重要，而且对任何投资于未来技术的人都至关重要，因为它有可能重新定义组织如何管理运营、响应事件并最终在日益自动化的世界中为客户提供服务。</p><h2 class="wp-block-heading" id="acknowledgements">致谢</h2><p>我们要感谢 Yinfang Chen、Manish Shetty、Yogesh Simmhan、 <a href="https://www.microsoft.com/en-us/research/people/xuchaozhang/">Xuchao Zhu</a> 、 <a href="https://www.microsoft.com/en-us/research/people/jonathanmace/">Jonathan Mace</a> 、Dax Vandevoorde、 <a href="https://www.microsoft.com/en-us/research/people/pedrobr/">Pedro Las-Casas</a> 、Shachee Mishra Gupta 和<a href="https://www.microsoft.com/en-us/research/people/sumann/">Suman Nath</a>为本项目做出的贡献。</p><span id="label-external-link" class="sr-only" aria-hidden="true">在新选项卡中打开</span><p><a href="https://www.microsoft.com/en-us/research/blog/aiopslab-building-ai-agents-for-autonomous-clouds/">《AIOpsLab：为自主云构建 AI 代理》</a>一文首先出现在<a href="https://www.microsoft.com/en-us/research">Microsoft Research</a>上。</p> ]]>;</content:encoded></item></channel></rss>