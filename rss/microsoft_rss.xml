<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:wfw="http://wellformedweb.org/CommentAPI/"><channel><title>微软研究院博客 - 微软研究院</title><atom:link href="https://www.microsoft.com/en-us/research/blog/feed/?from=https%3A%2F%2Fresearch.microsoft.com%2Frss%2Fnews.xml&amp;type=rss" rel="self" type="application/rss+xml"></atom:link><link/> https://www.microsoft.com/en-us/research/blog/<description></description><lastbuilddate> 2024 年 6 月 7 日星期五 16:48:39 +0000</lastbuilddate><language> en-US</language><sy:updateperiod>每小时</sy:updateperiod><sy:updatefrequency>1</sy:updatefrequency><generator> https://wordpress.org/?v=6.5.3</generator><item><title> SIBYL：基于机器学习的框架，用于预测动态工作负载</title><link/>https://www.microsoft.com/en-us/research/blog/sibyl-a-machine-learning-based-framework-for-forecasting-dynamic-workloads/<dc:creator><![CDATA[Alyssa Hughes]]></dc:creator><pubDate> Tue, 11 Jun 2024 16:00:00 +0000</pubDate><category><![CDATA[Research Blog]]></category><guid ispermalink="false"> https://www.microsoft.com/en-us/research/blog/sibyl-a-machine-learning-based-framework-for-forecasting-dynamic-workloads/ </guid><description><![CDATA[<p> SIBYL 是一种机器学习模型，可以对数据库查询进行高度准确的预测，从而能够进行调整以提高效率。将传统数据库优化应用于这些预测查询有助于在需求变化时保持高性能。</p><p> <a href="https://www.microsoft.com/en-us/research/blog/sibyl-a-machine-learning-based-framework-for-forecasting-dynamic-workloads/">SIBYL：一种基于机器学习的预测动态工作负载的框架</a>首先出现在<a href="https://www.microsoft.com/en-us/research">Microsoft Research</a>上。</p> ]]>; </description><content:encoded><![CDATA[
<p class="has-text-align-center"><strong><em><strong><em>本文在</em></strong><a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://2024.sigmod.org/" target="_blank" rel="noreferrer noopener"><strong><em>ACM SIGMOD/数据库系统原理会议</em></strong><span class="sr-only">（在新选项卡中打开）</span></a> <strong><em>(SIGMOD/PODS 2024) 上发表，该会议是大规模数据管理和数据库的首要论坛。</em></strong></em></strong> </p><figure class="wp-block-image size-full"><img fetchpriority="high" decoding="async" width="1400" height="788" src="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/SIGMOD-Sibyl-2024-BlogHeroFeature-1400x788-1.png" alt="SIGMOD/PODS 2024 徽标位于已接受论文第一页的左侧，"SIBYL: Forecasting Time-Evolving Query Workloads"" class="wp-image-1041537" srcset="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/SIGMOD-Sibyl-2024-BlogHeroFeature-1400x788-1.png 1400w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/SIGMOD-Sibyl-2024-BlogHeroFeature-1400x788-1-300x169.png 300w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/SIGMOD-Sibyl-2024-BlogHeroFeature-1400x788-1-1024x576.png 1024w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/SIGMOD-Sibyl-2024-BlogHeroFeature-1400x788-1-768x432.png 768w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/SIGMOD-Sibyl-2024-BlogHeroFeature-1400x788-1-1066x600.png 1066w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/SIGMOD-Sibyl-2024-BlogHeroFeature-1400x788-1-655x368.png 655w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/SIGMOD-Sibyl-2024-BlogHeroFeature-1400x788-1-240x135.png 240w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/SIGMOD-Sibyl-2024-BlogHeroFeature-1400x788-1-640x360.png 640w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/SIGMOD-Sibyl-2024-BlogHeroFeature-1400x788-1-960x540.png 960w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/SIGMOD-Sibyl-2024-BlogHeroFeature-1400x788-1-1280x720.png 1280w" sizes="(max-width: 1400px) 100vw, 1400px" /></figure><p>在当今快节奏的数字环境中，数据分析师越来越依赖分析仪表板来监控客户参与度和应用程序性能。然而，随着数据量的增加，这些仪表板可能会变慢，导致延迟和效率低下。一种解决方案是使用旨在优化数据物理存储和检索方式的软件，但挑战仍然在于预测分析师将运行的特定查询，这是一项因现代工作负载的动态性质而变得复杂的任务。</p><p>在 SIGMOD/PODS 2024 上发表的论文“ <a href="https://www.microsoft.com/en-us/research/publication/sibyl-forecasting-time-evolving-query-workloads/">SIBYL：预测随时间变化的查询工作负载</a>”中，我们介绍了一种基于机器学习的框架，旨在准确预测动态环境中的查询。这项创新使传统的优化工具（通常用于静态设置）能够无缝适应不断变化的工作负载，确保随着查询需求的变化而保持一致的高性能。 </p><div class="border-bottom border-top border-gray-300 mt-5 mb-5 msr-promo text-center text-md-left alignwide" data-bi-aN="promo" data-bi-id="970287"><p class="msr-promo__label text-gray-800 text-center text-uppercase"><span class="px-4 bg-white display-inline-block font-weight-semibold small">微软研究播客</span></p><div class="row pt-3 pb-4 align-items-center"><div class="msr-promo__media col-12 col-md-5"> <a class="bg-gray-300" href="https://www.microsoft.com/en-us/research/podcast/ai-frontiers-the-future-of-scale-with-ahmed-awadallah-and-ashley-llorens/" aria-label="AI Frontiers: The future of scale with Ahmed Awadallah and Ashley Llorens" data-bi-cN="AI Frontiers: The future of scale with Ahmed Awadallah and Ashley Llorens" target="_blank"><img decoding="async" class="w-100 display-block" src="https://www.microsoft.com/en-us/research/uploads/prod/2023/09/Ahmed_AI_Frontiers_TW_LI_FB_1200x627_With_Name.png" alt="MSR 播客 |人工智能前沿 |艾哈迈德·阿瓦达拉" /></a></div><div class="msr-promo__content p-3 px-5 col-12 col-md"><h2 class="h4"> AI 前沿：Ahmed Awadallah 和 Ashley Llorens 的规模化未来</h2><p class="large">本集的主角是高级首席研究经理<a href="https://www.microsoft.com/en-us/research/people/hassanam/" target="_blank" rel="noreferrer noopener">Ahmed H. Awadallah</a> ，他致力于提高大规模人工智能模型的效率，并努力帮助推动该领域从研究到实践的进步<strong> </strong>使他处于人工智能新时代的前沿。 </p><div class="wp-block-buttons justify-content-center justify-content-md-start"><div class="wp-block-button"> <a href="https://www.microsoft.com/en-us/research/podcast/ai-frontiers-the-future-of-scale-with-ahmed-awadallah-and-ashley-llorens/" class="btn btn-brand glyph-append glyph-append-chevron-right" aria-label="Listen now" data-bi-cN="AI Frontiers: The future of scale with Ahmed Awadallah and Ashley Llorens" target="_blank">现在听</a></div></div></div><!--/.msr-promo__content--></div><!--/.msr-promo__inner-wrap--><span id="label-external-link" class="sr-only" aria-hidden="true">在新选项卡中打开</span></div><!--/.msr-promo--><h2 class="wp-block-heading" id="sibyl-s-design-and-features">SIBYL的设计和特点</h2><p>SIBYL 的框架基于对现实世界工作负载的研究，这些研究表明大多数工作负载是动态的，但遵循可预测的模式。我们发现参数随时间变化的重复模式如下：</p><ul><li><strong>趋势</strong>：随着时间的推移增加、减少或保持稳定的查询。</li><li><strong>定期</strong>：定期发生的查询，例如每小时或每天。</li><li><strong>组合</strong>：趋势模式和周期性模式的混合。</li><li><strong>随机</strong>：具有不可预测模式的查询。</li></ul><p>这些见解（如图 1 所示）构成了 SIBYL 预测查询工作负载能力的基础，使数据库即使在使用模式发生变化时也能保持最高效率。 </p><figure class="wp-block-image aligncenter size-full"><img decoding="async" width="1400" height="1295" src="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/sibyl_blog_figure2.jpg" alt="该图说明了参数如何随查询到达时间变化的分析，识别了四种常见模式。 Y 轴表示查询到达时间，X 轴显示参数值。 (a) 部分显示了趋势模式，其中包括增加、减少趋势。 (b) 部分显示周期性模式，其特征是具有固定间隔（例如每小时、每天或每周）的规则模式。 (c) 部分结合了趋势模式和周期性模式，而 (d) 部分代表随机模式，表明没有规则或可预测的模式。" class="wp-image-1041600" srcset="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/sibyl_blog_figure2.jpg 1400w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/sibyl_blog_figure2-300x278.jpg 300w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/sibyl_blog_figure2-1024x947.jpg 1024w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/sibyl_blog_figure2-768x710.jpg 768w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/sibyl_blog_figure2-195x180.jpg 195w" sizes="(max-width: 1400px) 100vw, 1400px" /><figcaption class="wp-element-caption">图 1. 我们通过分析 Microsoft 遥测系统两周的匿名数据来研究数据库查询的变化模式和可预测性，该系统指导 Microsoft 产品和服务的决策。</figcaption></figure><p> SIBYL 使用机器学习来分析历史数据和参数，以预测查询和到达时间。 SIBYL 的架构如图 2 所示，分三个阶段运行：</p><ul><li><strong>训练</strong>：它使用历史查询日志和到达时间来构建机器学习模型。</li><li><strong>预测</strong>：它采用预训练模型来预测未来的查询及其时间。</li><li><strong>增量微调</strong>：它通过有效的反馈循环不断适应新的工作负载模式。 </li></ul><figure class="wp-block-image aligncenter size-full"><img decoding="async" width="1400" height="639" src="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/Overview_SIBYL.jpg" alt="该图显示了 SIBYL 的三个阶段。第一阶段是训练阶段：它以过去的查询及其到达时间为特征，并从头开始训练 ML 模型。第二阶段是预测阶段：它不断从工作负载跟踪中接收最近的查询，并使用训练阶段中预先训练的 ML 模型来预测下一个时间间隔内的查询及其预期到达时间。最后一个阶段是增量微调，它监视模型准确性并通过反馈循环检测工作负载变化（例如，工作负载中出现的新型查询）。它通过对转移的工作负载进行增量微调来有效地调整其模型，而无需从头开始重新训练。" class="wp-image-1041588" srcset="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/Overview_SIBYL.jpg 1400w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/Overview_SIBYL-300x137.jpg 300w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/Overview_SIBYL-1024x467.jpg 1024w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/Overview_SIBYL-768x351.jpg 768w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/Overview_SIBYL-240x110.jpg 240w" sizes="(max-width: 1400px) 100vw, 1400px" /><figcaption class="wp-element-caption">图 2. SIBYL 架构概述。 </figcaption></figure><h2 class="wp-block-heading" id="challenges-and-innovations-in-designing-a-forecasting-framework">设计预测框架的挑战和创新</h2><p>设计有效的预测框架具有挑战性，特别是在管理不同数量的查询以及为每种类型的查询创建单独模型的复杂性方面。 SIBYL 通过对大容量查询进行分组和对小容量查询进行集群来解决这些问题，从而支持可扩展性和效率。如图 3 所示，SIBYL 始终优于其他预测模型，在不同时间间隔内保持准确性，并证明其在动态工作负载中的有效性。 </p><figure class="wp-block-image aligncenter size-full"><img loading="lazy" decoding="async" width="1400" height="646" src="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/sibyl_blog_figure3.jpg" alt="该图全面比较了三种不同工作负载的四种预测模型：遥测、SCOPE、BusTracker 和销售数据集。比较的模型包括基于历史的模型、随机森林、Vanilla LSTM 和 Sibyl-LSTM。这些模型根据三个指标进行评估：召回率、精度和 F-1 分数。每个指标都在单独的列中表示，而工作负载则按行组织。评估是在不同的预测间隔内完成的：1 小时、6 小时、12 小时和 1 天。   Sibyl-LSTM 超越了其他预测模型，并在各种时间间隔设置下保持稳定的准确性。 Vanilla LSTM 和随机预测在销售工作负载上表现不佳，该工作负载具有更多异常值和更不稳定的模式。对于遥测工作负载，基于历史记录的方法在 12 小时间隔内表现良好，因为工作负载的重复查询在一天内（过去 12 小时窗口和未来 12 小时窗口之间）具有相同的参数值。但此方法对于一日间隔无效，因为许多查询参数值在跨越日期边界时会发生变化。对于其他三个工作负载，基于历史的方法产生的结果并不令人满意，这些工作负载表现出更快速和复杂的演变，并且涉及在更精细的时间尺度上运行的时间相关参数。因此，必须使用基于机器学习的预测模型来处理不断变化的工作负载。" class="wp-image-1041582" srcset="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/sibyl_blog_figure3.jpg 1400w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/sibyl_blog_figure3-300x138.jpg 300w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/sibyl_blog_figure3-1024x473.jpg 1024w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/sibyl_blog_figure3-768x354.jpg 768w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/sibyl_blog_figure3-240x111.jpg 240w" sizes="(max-width: 1400px) 100vw, 1400px" /><figcaption class="wp-element-caption">图 3. SIBYL-LSTM 与其他模型在预测下一个时间间隔的查询方面的准确性相比。</figcaption></figure><p> SIBYL 通过不断学习来适应工作负载模式的变化，以最少的调整保持高精度。如图 4 所示，经过微调后，模型仅用 6.4 秒就达到了 95% 的准确率，几乎与初始的 95.4% 准确率持平。 </p><figure class="wp-block-image aligncenter size-full"><img loading="lazy" decoding="async" width="1400" height="778" src="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/Sibyl_blog_figure4.jpg" alt="该图由a、b两部分组成。  (a) 描述了遥测工作负载中参数的模式变化。 Y 轴表示查询到达时间，X 轴显示参数值。模式的转变从 5 月 13 日开始（以浅蓝色突出显示），Sibyl 通过观察准确性的下降来检测到这一点。移动模式上的模型准确率为 51.9%，低于阈值 𝛼 = 75%，触发模型微调。  图 11 (b) 显示，Sibyl 通过对新观察到的数据进行增量训练（而不是从头开始训练）来微调 Sibyl-LSTM。 Y 轴代表召回率，X 轴显示时期数。该图表明，该模型仅在两个 epoch 内收敛，花费了 6.4 秒的开销，并将准确率提高到 95.0%，接近于预训练的 95.4% 准确率。" class="wp-image-1041579" srcset="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/Sibyl_blog_figure4.jpg 1400w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/Sibyl_blog_figure4-300x167.jpg 300w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/Sibyl_blog_figure4-1024x569.jpg 1024w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/Sibyl_blog_figure4-768x427.jpg 768w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/05/Sibyl_blog_figure4-240x133.jpg 240w" sizes="(max-width: 1400px) 100vw, 1400px" /><figcaption class="wp-element-caption">图 4. 遥测工作负载变化的微调结果。</figcaption></figure><p>为了解决仪表板性能缓慢的问题，我们通过使用 SIBYL 创建物化视图（可以使查询运行得更快的特殊数据结构）来测试 SIBYL。这些视图识别常见任务并建议提前存储哪些任务，从而加快未来的查询。</p><p>我们使用 20 天内来自匿名 Microsoft 销售数据的 2,237 个查询来训练 SIBYL，使我们能够为第二天创建物化视图。使用历史数据将查询性能提高了 1.06 倍，而 SIBYL 的预测则实现了 1.83 倍的提升。这表明 SIBYL 预测未来工作负载的能力可以显着提高数据库性能。</p><h3 class="wp-block-heading" id="implications-and-looking-ahead">影响和展望</h3><p>SIBYL 预测动态工作负载的能力除了改进物化视图之外还有许多应用。它可以帮助组织有效地扩展资源，从而降低成本。它还可以通过自动组织数据来提高查询性能，确保最常访问的数据始终可用。展望未来，我们计划集成更多机器学习技术，使 SIBYL 更加高效，减少设置所需的工作量，并改进数据库处理动态工作负载的方式，使其更快、更可靠。</p><h2 class="wp-block-heading" id="acknowledgments">致谢</h2><p>我们要感谢论文合著者 Jyoti Leeka、Alekh Jindal 和 Jishen Zhu 的宝贵贡献和努力。</p><span id="label-external-link" class="sr-only" aria-hidden="true">在新选项卡中打开</span><p><a href="https://www.microsoft.com/en-us/research/blog/sibyl-a-machine-learning-based-framework-for-forecasting-dynamic-workloads/">SIBYL：一种基于机器学习的预测动态工作负载的框架</a>首先出现在<a href="https://www.microsoft.com/en-us/research">Microsoft Research</a>上。</p> ]]>;</content:encoded></item><item><title> LST-Bench：数据湖中开放表格式的新基准工具</title><link/>https://www.microsoft.com/en-us/research/blog/lst-bench-a-new-benchmark-tool-for-open-table-formats-in-the-data-lake/<dc:creator><![CDATA[Alyssa Hughes]]></dc:creator><pubDate> Mon, 10 Jun 2024 16:00:00 +0000</pubDate><category><![CDATA[Research Blog]]></category><guid ispermalink="false"> https://www.microsoft.com/en-us/research/blog/lst-bench-a-new-benchmark-tool-for-open-table-formats-in-the-data-lake/ </guid><description><![CDATA[<p> LST-Bench 是一个新的开源基准测试，旨在评估云环境中的表格式。它扩展了现有基准，以更好地反映数据湖的实际使用情况和性能，并轻松与常用的分析引擎集成。</p><p> <a href="https://www.microsoft.com/en-us/research/blog/lst-bench-a-new-benchmark-tool-for-open-table-formats-in-the-data-lake/">LST-Bench：数据湖中开放表格式的新基准测试工具</a>首先出现在<a href="https://www.microsoft.com/en-us/research">Microsoft Research</a>上。</p> ]]>; </description><content:encoded><![CDATA[
<p class="has-text-align-center"><em><em><strong>本文在</strong></em><a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://2024.sigmod.org/" target="_blank" rel="noreferrer noopener"><strong><em>ACM SIGMOD/数据库系统原理会议</em></strong><span class="sr-only">（在新选项卡中打开）</span></a> <em><strong>(SIGMOD/PODS 2024) 上发表，该会议是大规模数据管理和数据库的首要论坛。</strong></em></em> </p><figure class="wp-block-image aligncenter size-full"><img loading="lazy" decoding="async" width="1401" height="788" src="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/NEW_SIGMOD2024-BlogHeroFeature-1400x788-1.png" alt="SIGMOD PODS 2024 徽标位于首页左侧"LST-Bench: Benchmarking Log-Structured Tables in the Cloud"" class="wp-image-1042893" srcset="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/NEW_SIGMOD2024-BlogHeroFeature-1400x788-1.png 1401w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/NEW_SIGMOD2024-BlogHeroFeature-1400x788-1-300x169.png 300w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/NEW_SIGMOD2024-BlogHeroFeature-1400x788-1-1024x576.png 1024w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/NEW_SIGMOD2024-BlogHeroFeature-1400x788-1-768x432.png 768w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/NEW_SIGMOD2024-BlogHeroFeature-1400x788-1-1066x600.png 1066w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/NEW_SIGMOD2024-BlogHeroFeature-1400x788-1-655x368.png 655w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/NEW_SIGMOD2024-BlogHeroFeature-1400x788-1-240x135.png 240w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/NEW_SIGMOD2024-BlogHeroFeature-1400x788-1-640x360.png 640w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/NEW_SIGMOD2024-BlogHeroFeature-1400x788-1-960x540.png 960w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/NEW_SIGMOD2024-BlogHeroFeature-1400x788-1-1280x720.png 1280w" sizes="(max-width: 1401px) 100vw, 1401px" /></figure><p>随着组织努力应对不断扩大的数据集，采用数据湖已成为可扩展且经济高效的数据管理的重要策略。这些系统的成功很大程度上取决于用于存储数据的文件格式。传统格式虽然在数据压缩和组织方面高效，但会因频繁更新而变得不稳定。 Delta Lake、Apache Iceberg 和 Apache Hudi 等高级表格式提供了有前景的解决方案，更容易进行数据修改和历史跟踪，但它们的功效在于处理持续更新的能力，这是一项需要广泛而彻底的评估的挑战。</p><p>我们在 SIGMOD 2024 上发表的论文“ <a href="https://www.microsoft.com/en-us/research/publication/lst-bench-benchmarking-log-structured-tables-in-the-cloud/" target="_blank" rel="noreferrer noopener">LST-Bench：对云中的日志结构表进行基准测试<span class="sr-only">（在新选项卡中打开）</span></a> ”介绍了一种创新工具，旨在评估云中不同表格式的性能。 LST-Bench 以完善的<a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://www.tpc.org/tpcds/" target="_blank" rel="noreferrer noopener">TPC-DS <span class="sr-only">（在新选项卡中打开）</span></a>基准为基础，该基准衡量系统处理大型数据集和复杂查询的效率，并包含专为表格式设计的功能，简化了在实际情况下测试它们的过程。世界条件。此外，它还自动进行测试并从计算引擎和各种云服务收集必要数据，从而实现准确的性能评估。</p><h2 class="wp-block-heading" id="flexible-and-adaptive-testing">灵活、适应性测试</h2><p>LST-Bench 专为灵活性而设计，可适应广泛的场景，如图 1 所示。该框架是通过融合工程师的见解而开发的，有助于集成 TPC-DS 等现有工作负载，同时提高可重用性。例如，每个测试会话都会建立与数据处理引擎的新连接，将任务组织为一系列语句。此设置允许开发人员在单个会话中顺序运行多个任务，或者在多个会话中同时运行多个任务，从而反映真实世界的应用程序模式。 </p><figure class="wp-block-image aligncenter size-full"><img loading="lazy" decoding="async" width="2250" height="230" src="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure1.png" alt="显示 LST-Bench 中的工作负载组件及其关系的图表。" class="wp-image-1042341" srcset="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure1.png 2250w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure1-300x31.png 300w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure1-1024x105.png 1024w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure1-768x79.png 768w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure1-1536x157.png 1536w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure1-2048x209.png 2048w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure1-240x25.png 240w" sizes="(max-width: 2250px) 100vw, 2250px" /><figcaption class="wp-element-caption">图 1.LST-Bench 中的工作负载组件及其关系。任务是 SQL 语句的序列，而会话是代表逻辑工作单元或用户会话的任务序列。阶段是一组并发会话，必须在下一阶段开始之前完成这些会话。最后，工作负载是一系列阶段。</figcaption></figure><p> TPC-DS 工作负载包括以下基本任务：</p><ul><li><strong>加载任务</strong>：<strong> </strong>将数据加载到表中进行实验。</li><li><strong>单用户任务</strong>：执行复杂的查询来测试引擎的性能上限。</li><li><strong>数据维护任务</strong>：<strong> </strong>处理数据插入和删除。</li></ul><p> LST-Bench 引入了以下特定于表格式的任务：</p><ul><li><strong>优化任务</strong>：压缩表内的数据文件。</li><li><strong>时间旅行任务</strong>：允许查询过去指定时间点出现的数据。</li><li><strong>参数化自定义任务</strong>：允许集成用户定义的代码以创建动态工作流程。</li></ul><p>这些功能使 LST-Bench 能够评估 TPC-DS 未涵盖的表格式的各个方面，从而更深入地了解其性能，如图 2 所示。 </p><figure class="wp-block-image aligncenter size-full"><img loading="lazy" decoding="async" width="1400" height="1035" src="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure2-Edited-23may24.png" alt="该图说明了各种 LST-Bench 任务组合在一起创建工作负载，从而提供对表格式的深入了解。工作负载评估随着时间的推移对频繁数据修改的处理，优化表以进行不同大小的多次修改，管理同时读写会话，跨不同时间点查询数据，以及评估批量大小变化对读取查询性能的影响。" class="wp-image-1042338" srcset="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure2-Edited-23may24.png 1400w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure2-Edited-23may24-300x222.png 300w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure2-Edited-23may24-1024x757.png 1024w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure2-Edited-23may24-768x568.png 768w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure2-Edited-23may24-80x60.png 80w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure2-Edited-23may24-240x177.png 240w" sizes="(max-width: 1400px) 100vw, 1400px" /><figcaption class="wp-element-caption">图 2. LST-Bench 在 TPC-DS 的基础上进行了扩展，引入了灵活的工作负载表示并合并了扩展，帮助用户深入了解以前被原始基准测试忽略的表格式。 </figcaption></figure><h2 class="wp-block-heading" id="a-degradation-rate-metric-to-measure-stability">衡量稳定性的降解率指标</h2><p>除了这些工作负载扩展之外，LST-Bench 还引入了新的指标来全面、公平地评估表格式。它保留了性能、存储和计算效率等传统指标类别，并添加了一个称为<em>降级率</em>的新稳定性指标。这个新指标专门解决了数据湖中累积小文件的影响（这是频繁的小更新引起的常见问题），提供了对系统随时间的效率的评估。</p><p>退化率是通过将工作负载划分为不同阶段来计算的。退化率\(S_{DR}\)定义如下：</p><p class="has-text-align-center"> \(S_{DR}={1\over n}\sum\limits_{i=1}^n\dfrac{M_{i} – M_{i-1}}{M_{i-1}}\)</p><p>这里，\(M_i\)表示工作负载阶段第\(i^{th}\)次迭代的性能或效率指标值，\(n\)反映该阶段的迭代总数。直观上，\(S_{DR}\) 是指标增长或收缩的速率，反映了底层系统状态变化的累积效应。该速率可让您深入了解系统随时间退化的速度。稳定的系统表现出较低的\(S_{DR}\)，表明退化最小。</p><h2 class="wp-block-heading" id="lst-bench-implementation"> LST-Bench 实施</h2><p>LST-Bench 具有基于 Java 的客户端应用程序，可在各种引擎上运行 SQL 工作负载，使用户能够定义任务、会话和阶段库以重用不同的工作负载组件。这使他们能够在工作负载定义中引用这些库、添加新的任务模板或为特定于模型的场景创建全新的任务库。</p><p> LST-Bench 还包括一个处理模块，可整合实验结果并计算指标，以提供对表格式和引擎的深入了解。它使用来自 LST-Bench 的内部遥测数据和来自云服务的外部遥测数据，例如资源利用率、存储 API 调用和网络 I/O 量。指标处理器提供多种可视化选项，包括笔记本和网络应用程序，以帮助用户有效分析性能数据。 </p><figure class="wp-block-image aligncenter size-full"><img loading="lazy" decoding="async" width="1400" height="500" src="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure3.png" alt="描述 LST-Bench 工具的组件和执行模型的插图。客户端应用程序通过专用驱动程序与引擎建立连接，而指标处理器则从客户端应用程序、引擎和其他云服务收集遥测数据。这些数据通过笔记本或 Web 应用程序进行聚合和可视化。" class="wp-image-1042347" srcset="https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure3.png 1400w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure3-300x107.png 300w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure3-1024x366.png 1024w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure3-768x274.png 768w, https://www.microsoft.com/en-us/research/uploads/prodnew/2024/06/LST-Bench_figure3-240x86.png 240w" sizes="(max-width: 1400px) 100vw, 1400px" /><figcaption class="wp-element-caption">图 3.LST-Bench 工具组件和执行模型。</figcaption></figure><h2 class="wp-block-heading" id="implications-and-looking-ahead">影响和展望</h2><p>LST-Bench 无缝集成到<a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://learn.microsoft.com/fabric/data-warehouse/" target="_blank" rel="noreferrer noopener">Microsoft Fabric <span class="sr-only">（在新选项卡中打开）</span></a>仓库的测试工作流程中，使该团队能够严格评估引擎性能、评估版本并识别任何问题。这将为 Microsoft Fabric 数据分析平台带来更可靠、更优化的用户体验。此外，LST-Bench 有望成为各种 Microsoft 计划的基础工具。它目前在致力于改进表格式的数据组织的研究项目中发挥着重要作用，其目标是提高 Microsoft Fabric 上客户工作负载的性能。 LST-Bench 还用于评估使用<a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://xtable.apache.org/" target="_blank" rel="noreferrer noopener">Apache XTable（孵化） <span class="sr-only">（在新选项卡中打开）</span></a>转换的表格式的性能，Apache XTable 是一种开源工具，旨在防止数据湖中的数据孤岛。</p><p> LST-Bench 是<a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://github.com/microsoft/lst-bench/">开源的<span class="sr-only">（在新选项卡中打开）</span></a> ，我们欢迎贡献者帮助扩展此工具，使组织能够非常有效地彻底评估其表格格式。 </p><div class="border-bottom border-top border-gray-300 mt-5 mb-5 msr-promo text-center text-md-left alignwide" data-bi-aN="promo" data-bi-id="1045005"><p class="msr-promo__label text-gray-800 text-center text-uppercase"><span class="px-4 bg-white display-inline-block font-weight-semibold small">焦点：活动</span></p><div class="row pt-3 pb-4 align-items-center"><div class="msr-promo__media col-12 col-md-5"> <a class="bg-gray-300" href="https://www.microsoft.com/en-us/research/event/inclusive-digital-maker-futures-workshop/" aria-label="Inclusive Digital Maker Futures for Children via Physical Computing" data-bi-cN="Inclusive Digital Maker Futures for Children via Physical Computing" target="_blank"><img decoding="async" class="w-100 display-block" src="https://www.microsoft.com/en-us/research/uploads/prodnew/2017/05/IDC24-logo_workshop_1400x788.jpg" alt="ACM IDC 徽标" /></a></div><div class="msr-promo__content p-3 px-5 col-12 col-md"><h2 class="h4">通过物理计算为儿童打造包容性数字创客未来</h2><p class="large">本次研讨会将汇集研究人员和教育工作者，共同构想在 STEAM 课堂内外为儿童提供低成本、广泛使用的数字化制作的未来。 </p><div class="wp-block-buttons justify-content-center justify-content-md-start"><div class="wp-block-button"> <a href="https://www.microsoft.com/en-us/research/event/inclusive-digital-maker-futures-workshop/" class="btn btn-brand glyph-append glyph-append-chevron-right" aria-label="Read more" data-bi-cN="Inclusive Digital Maker Futures for Children via Physical Computing" target="_blank">阅读更多</a></div></div></div><!--/.msr-promo__content--></div><!--/.msr-promo__inner-wrap--><span id="label-external-link" class="sr-only" aria-hidden="true">在新选项卡中打开</span></div><!--/.msr-promo--><p><strong>致谢</strong></p><p>我们要感谢<a href="https://www.microsoft.com/en-us/research/people/jcahoon/">Joyce Cahoon <span class="sr-only">（在新选项卡中打开）</span></a>和<a href="https://www.microsoft.com/en-us/research/people/yiwzh/">Yiwen Zhu <span class="sr-only">（在新选项卡中打开）</span></a>对稳定性指标的宝贵讨论，以及<a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://www.linkedin.com/in/josemedranojimenez/" target="_blank" rel="noreferrer noopener">Jose Medrano <span class="sr-only">（在新选项卡中打开）</span></a>和<a class="msr-external-link glyph-append glyph-append-open-in-new-tab glyph-append-xsmall" href="https://www.linkedin.com/in/emma-rose-wirshing-aa790b105/" target="_blank" rel="noreferrer noopener">Emma Rose Wirshing <span class="sr-only">（在新选项卡中打开）</span></a>了解他们对 LST-Bench 的反馈以及将其与 Microsoft Fabric Warehouse 集成的工作。</p><span id="label-external-link" class="sr-only" aria-hidden="true">在新选项卡中打开</span><p><a href="https://www.microsoft.com/en-us/research/blog/lst-bench-a-new-benchmark-tool-for-open-table-formats-in-the-data-lake/">LST-Bench：数据湖中开放表格式的新基准测试工具</a>首先出现在<a href="https://www.microsoft.com/en-us/research">Microsoft Research</a>上。</p> ]]>;</content:encoded></item></channel></rss>