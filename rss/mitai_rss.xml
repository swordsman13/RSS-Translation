<rss version="2.0" xml:base="https://news.mit.edu" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>麻省理工学院新闻 - 计算机科学与人工智能实验室 (CSAIL)</title><link/> https://news.mit.edu/topic/mitcomputers-rss.xml <atom:link href="https://news.mit.edu/topic/mitcomputers-rss.xml" rel="self" type="application/rss+xml"></atom:link><description>麻省理工学院新闻提要：计算机科学与人工智能实验室 (CSAIL)</description><language> zh</language><lastbuilddate> 2023 年 10 月 30 日星期一 04:00:00 +0000</lastbuilddate><item><title>新技术有效加速大规模人工智能模型的稀疏张量</title><link/>https://news.mit.edu/2023/new-techniques-efficiently-accelerate-sparse-tensors-1030<description>互补的方法——“HighLight”和“Tailors and Swiftiles”——可以提高要求苛刻的机器学习任务的性能。</description><pubDate> Mon, 30 Oct 2023 00:00:00 -0400</pubDate><guid ispermalink="true"> https://news.mit.edu/2023/new-techniques-efficiently-accelerate-sparse-tensors-1030</guid><dc:creator>亚当·泽威 |麻省理工学院新闻</dc:creator><content:encoded>&lt;p>;来自 MIT 和 NVIDIA 的研究人员开发了两种加速稀疏张量处理的技术，稀疏张量是一种用于高性能计算任务的数据结构。互补技术可以显着提高系统的性能和能源效率，例如驱动生成人工智能的大规模机器学习模型。&lt;/p>; &lt;p>;张量是机器学习模型使用的数据结构。这两种新方法都试图有效地利用张量中所谓的稀疏性（零值）。处理这些张量时，可以跳过零并节省计算量和内存。例如，任何乘以零的结果都是零，因此它可以跳过该操作。而且它可以压缩张量（不需要存储零），因此可以将更大的部分存储在片上存储器中。&lt;/p>; &lt;p>;但是，利用稀疏性存在一些挑战。在大张量中找到非零值并不是一件容易的事。现有方法通常通过强制稀疏模式来简化搜索来限制非零值的位置，但这限制了可以有效处理的稀疏张量的种类。&lt;/p>; &lt;p>;另一个挑战是非零值的数量可以张量的不同区域有所不同。这使得很难确定需要多少空间来存储内存中的不同区域。为了确保该区域适合，通常会分配比所需更多的空间，从而导致存储缓冲区未得到充分利用。这增加了片外内存流量，从而增加了能耗。&lt;/p>; &lt;p>;麻省理工学院和 NVIDIA 研究人员制定了两种解决方案来解决这些问题。首先，他们开发了一种技术，允许硬件有效地找到更广泛的稀疏模式的非零值。&lt;/p>; &lt;p>;对于另一个解决方案，他们创建了一种可以处理数据不存在的情况的方法。不适合内存，这增加了存储缓冲区的利用率并减少了片外内存流量。&lt;/p>; &lt;p>;两种方法都提高了性能并减少了专门设计用于加速稀疏数据处理的硬件加速器的能源需求张量。&lt;/p>; &lt;p>;“通常，当您使用更专业或特定领域的硬件加速器时，您会失去从更通用的处理器（如 CPU）获得的灵活性。这两项工作的突出之处在于，我们表明，在专业化和高效的同时，你仍然可以保持灵活性和适应性，”麻省理工学院电气工程与计算机科学系 (EECS) 副教授、该协会成员 Vivienne Sze 说道。电子研究实验室 (RLE)，以及 &lt;a href=&quot;https://arxiv.org/pdf/2305.12718.pdf&quot; target=&quot;_blank&quot;>;两者&lt;/a>; &lt;a href= 论文的共同高级作者“https://arxiv.org/pdf/2310.00192.pdf” target=&quot;_blank&quot;>;进展&lt;/a>;。&lt;/p>; &lt;p>;她的合著者包括主要作者 Yannan Nellie Wu 博士 &#39;23 和 Zi Yu薛，电气工程和计算机科学研究生；共同资深作者 Joel Emer（麻省理工学院计算机科学和电气工程实践教授、计算机科学和人工智能实验室 (CSAIL) 成员）以及 NVIDIA 的其他成员。这两篇论文都将在 IEEE/ACM 国际微架构研讨会上发表。&lt;/p>; &lt;p>;&lt;strong>;HighLight：有效查找零值&lt;/strong>;&lt;/p>; &lt;p>;稀疏性可能会出现在张量中各种原因。例如，研究人员有时会通过用零替换张量中的某些值来“修剪”机器学习模型中不必要的部分，从而产生稀疏性。对于不同的模型，稀疏程度（零的百分比）和零的位置可能有所不同。&lt;/p>; &lt;p>;为了更容易地在具有数十亿个单独值的模型中找到剩余的非零值，研究人员经常限制非零值的位置，使它们落入某种模式。然而，每个硬件加速器通常被设计为支持一种特定的稀疏模式，从而限制了其灵活性。 &lt;/p>; &lt;p>;相比之下，麻省理工学院研究人员设计的硬件加速器（称为 HighLight）可以处理各种稀疏模式，并且在运行没有任何零值的模型时仍然表现良好。&lt;/p >; &lt;p>;他们使用一种称为“层次结构稀疏性”的技术来有效地表示由几种简单稀疏模式组成的各种稀疏模式。这种方法将张量中的值划分为更小的块，其中每个块都有自己的简单稀疏模式（可能在具有四个值的块中包含两个零和两个非零）。&lt;/p>; &lt;p>;然后，他们将这些块组合起来成一个层次结构，其中每个块集合也有其自己的简单稀疏模式（在具有四个块的级别中可能有一个零块和三个非零块）。他们继续将块组合成更大的级别，但每一步的模式仍然很简单。&lt;/p>; &lt;p>;这种简单性使 HighLight 能够更有效地查找和跳过零，因此它可以充分利用机会来减少多余的计算。平均而言，他们的加速器设计的能量延迟积（与能源效率相关的指标）比其他方法好大约六倍。&lt;/p>; &lt;p>;“最终，HighLight 加速器能够有效地加速密集模型，因为“它不会带来大量开销，同时它能够基于层次结构稀疏性利用具有不同数量的零值的工作负载。”Wu 解释道。&lt;/p>; &lt;p>;在未来，她和她的团队合作者希望将层次结构稀疏性应用于更多类型的机器学习模型和模型中不同类型的张量。&lt;/p>; &lt;p>;&lt;strong>;Tailors 和 Swiftiles：有效地“超额预订”以加速工作负载&lt;/strong>;&lt; /p>; &lt;p>;研究人员还可以利用稀疏性更有效地移动和处理计算机芯片上的数据。&lt;/p>; &lt;p>;由于张量通常大于芯片上内存缓冲区中可以存储的量，因此芯片一次仅获取并处理张量的一部分。这些块被称为图块。&lt;/p>; &lt;p>;为了最大限度地利用该缓冲区并限制芯片必须访问片外存储器的次数（片外存储器通常在能源消耗中占主导地位并限制处理速度），研究人员寻求使用适合缓冲区的最大瓦片。&lt;/p>; &lt;p>;但是在稀疏张量中，许多数据值为零，因此可以装入缓冲区的瓦片比根据其容量所预期的更大。不需要存储零值。&lt;/p>; &lt;p>;但是零值的数量在张量的不同区域中可能会有所不同，因此每个图块的零值数量也可能有所不同。这使得确定适合缓冲区的图块大小变得困难。因此，现有的方法通常保守地假设没有零，并最终选择较小的图块，这导致缓冲区中浪费空白空间。&lt;/p>; &lt;p>;为了解决这种不确定性，研究人员建议使用“超额预订”，以允许他们增加图块大小，以及在图块不适合缓冲区的情况下容忍它的方法。&lt;/p>; &lt;p>;就像航空公司超额预订航班机票一样，如果所有的当乘客出现时，航空公司必须对被撞下飞机的乘客进行赔偿。但通常不会出现所有乘客。&lt;/p>; &lt;p>;在稀疏张量中，可以选择图块大小，以便通常图块将具有足够的零，大多数仍适合缓冲区。但有时，图块中的非零值会多于适合的值。在这种情况下，这些数据会从缓冲区中弹出。&lt;/p>; &lt;p>;研究人员使硬件能够仅重新获取弹出的数据，而无需再次抓取和处理整个图块。他们修改了缓冲区的“尾端”来处理这个问题，因此这项技术被称为“Tailors”。&lt;/p>; &lt;p>;然后，他们还创建了一种利用超额预订来查找图块大小的方法。这种称为 Swiftiles 的方法可以快速估计理想的图块大小，以便超额预订由用户设置的特定百分比的图块。 （“Tailors”和“Swiftiles”这个名字是为了向 Taylor Swift 致敬，她最近的 Eras 巡演门票预售代码都被超额预订）。&lt;/p>; &lt;p>;Swiftiles 减少了硬件需要检查张量的次数确定理想的瓷砖尺寸，节省计算量。 Tailors 和 Swiftiles 的结合使速度提高了一倍以上，同时只需要现有硬件加速器一半的能源需求，而现有硬件加速器无法处理超额预订。&lt;/p>; &lt;p>;“Swiftiles 使我们能够估计这些图块需要有多大，而无需多个迭代以细化估计。这仅在支持超额预订时有效。即使偏离了相当大的幅度，由于非零的分布方式，您仍然可以获得相当多的加速。”薛说。&lt;/p>; &lt;p>;将来，研究人员希望应用将超额预订的想法引入到计算机体系结构的其他方面，并致力于改进估计超额预订最佳水平的过程。&lt;/p>; &lt;p>;这项研究部分由麻省理工学院人工智能硬件计划资助。&lt;/p>; >; </content:encoded><media:content height="260" medium="image" type="image/jpeg" url="https://news.mit.edu/sites/default/files/styles/news_article__cover_image__original/public/images/202310/MIT-Sparsity-Solutions-01-press.jpg?itok=FHImWxcf" width="390"><media:description type="plain">麻省理工学院和 NVIDIA 的研究人员开发了两种互补技术，可以显着提高图形分析或生成人工智能等高性能计算应用程序的速度和性能。这两种新方法都试图有效地利用张量中的稀疏性（零值）。</media:description><media:credit>图片：Jose-Luis Olivares，麻省理工学院</media:credit></media:content><category domain="https://news.mit.edu/topic/research">研究</category><category domain="https://news.mit.edu/topic/computers">计算机科学与技术</category><category domain="https://news.mit.edu/topic/artificial-intelligence2">人工智能</category><category domain="https://news.mit.edu/topic/machine-learning">机器学习</category><category domain="https://news.mit.edu/topic/electronics">电子产品</category><category domain="https://news.mit.edu/topic/data">数据</category><category domain="https://news.mit.edu/topic/computer-science-and-artificial-intelligence-laboratory-csail">计算机科学与人工智能实验室（CSAIL）</category><category domain="https://news.mit.edu/topic/research-laboratory-electronics-1">电子研究室</category><category domain="https://news.mit.edu/topic/electrical-engineering-computer-science-eecs">电气工程与计算机科学（eecs）</category><category domain="https://news.mit.edu/topic/school-engineering">工程学院</category><category domain="https://news.mit.edu/topic/mit-schwarzman-college-computing">麻省理工学院施瓦茨曼计算学院</category></item><item><title>加速人工智能任务，同时保护数据安全</title><link/>https://news.mit.edu/2023/acceleating-ai-tasks-while-preserving-data-security-1030<description> SecureLoop 搜索工具可有效识别硬件的安全设计，从而提高复杂人工智能任务的性能，同时需要更少的能源。</description><pubDate> Mon, 30 Oct 2023 00:00:00 -0400</pubDate><guid ispermalink="true"> https://news.mit.edu/2023/acceleating-ai-tasks-while-preserving-data-security-1030</guid><dc:creator>亚当·泽威 |麻省理工学院新闻</dc:creator><content:encoded>&lt;p>;随着计算密集型机器学习应用程序（例如执行实时语言翻译的聊天机器人）的激增，设备制造商通常会采用专门的硬件组件来快速移动和处理这些系统所需的大量数据。&lt;/p>; &lt;p>;为这些组件（称为深度神经网络加速器）选择最佳设计具有挑战性，因为它们可以有多种设计选项。当设计者寻求添加加密操作以保护数据免受攻击者攻击时，这个难题变得更加棘手。&lt;/p>; &lt;p>;现在，麻省理工学院的研究人员开发了一种搜索引擎，可以有效地识别深度神经网络加速器的最佳设计，在提高性能的同时保护数据安全。&lt;/p>; &lt;p>;他们的搜索工具，称为 &lt;a href=&quot;https://par.nsf.gov/biblio/10465225-secureloop-design-space-exploration-secure-dnn -accelerators&quot; target=&quot;_blank&quot;>;SecureLoop&lt;/a>;，旨在考虑添加数据加密和身份验证措施将如何影响加速器芯片的性能和能源使用。工程师可以使用此工具获得适合其神经网络和机器学习任务的加速器的最佳设计。&lt;/p>; &lt;p>;与不考虑安全性的传统调度技术相比，SecureLoop 可以提高加速器设计，同时保护数据。 &lt;/p>; &lt;p>;使用 SecureLoop 可以帮助用户提高自动驾驶或医学图像分类等要求严格的人工智能应用的速度和性能，同时确保敏感的用户数据免受某些类型的攻击。&lt;​​/p >; &lt;p>;“如果您有兴趣进行计算以保护数据的安全性，那么我们之前用于寻找最佳设计的规则现在已经被打破了。因此，所有优化都需要针对这组新的、更复杂的约束进行定制。这就是（主要作者）Kyungmi 在这篇论文中所做的。”麻省理工学院计算机科学和电气工程实践教授、SecureLoop 论文的合著者 Joel Emer 说道。&lt;/p>; &lt;p>;Emer该论文的主要作者是电气工程和计算机科学研究生 Kyungmi Lee；严孟佳 (Mengjia Yan)，Homer A. Burnell 电气工程和计算机科学职业发展助理教授，计算机科学和人工智能实验室 (CSAIL) 成员；资深作者 Anantha Chandrakasan，麻省理工学院工程学院院长、Vannevar Bush 电气工程和计算机科学教授。该研究将在 IEEE/ACM 国际微架构研讨会上进行展示。&lt;/p>; &lt;p>;“社区被动地接受了向加速器添加加密操作会带来开销的观点。他们认为这只会在设计权衡空间中引入很小的差异。但是，这是一个误解。事实上，加密操作会严重扭曲节能加速器的设计空间。 Kyungmi 在识别这个问题方面做得非常出色。”Yan 补充道。&lt;/p>; &lt;p>;&lt;strong>;安全加速&lt;/strong>;&lt;/p>; &lt;p>;A &lt;a href=&quot;https://news.mit. edu/2017/explained-neural-networks-deep-learning-0414&quot; target=&quot;_blank&quot;>;深度神经网络&lt;/a>;由处理数据的多层互连节点组成。通常，一层的输出成为下一层的输入。数据被分组为称为块的单元，用于在片外存储器和加速器之间进行处理和传输。神经网络的每一层都可以有自己的数据切片配置。&lt;/p>; &lt;p>;深度神经网络加速器是一个具有计算单元阵列的处理器，可以在网络的每一层中并行执行乘法等操作。加速器调度描述了如何移动和处理数据。&lt;/p>; &lt;p>;由于加速器芯片上的空间非常宝贵，因此大多数数据都存储在片外存储器中，并在需要时由加速器获取。但由于数据存储在芯片外，因此很容易受到攻击者的攻击，攻击者可能会窃取信息或更改某些值，从而导致神经网络发生故障。&lt;/p>; &lt;p>;“作为芯片制造商，您无法保证外部设备或整个操作系统的安全性。”Lee 解释道。&lt;/p>; &lt;p>;制造商可以通过向加速器添加经过身份验证的加密来保护数据。加密使用密钥对数据进行加扰。然后，身份验证将数据切割成统一的块，并为每个数据块分配一个加密哈希值，该哈希值与数据块一起存储在片外存储器中。&lt;/p>; &lt;p>;当加速器获取加密的数据块时，称为身份验证块，它在处理原始数据之前使用密钥来恢复和验证原始数据。&lt;/p>; &lt;p>;但是身份验证块和数据块的大小不匹配，因此可能存在多个一个块中的图块，或者一个图块可以分为两个块。加速器无法任意获取认证块的一小部分，因此它最终可能会获取额外的数据，这会消耗额外的能量并减慢计算速度。&lt;/p>; &lt;p>;此外，加速器仍然必须在麻省理工学院的研究人员通过 SecureLoop 寻求一种能够识别最快且最安全的方法。最节能的加速器调度——一种最大限度地减少设备因加密和身份验证而需要访问片外存储器以获取额外数据块的次数的加速器调度。 &lt;/p>; &lt;p>;他们首先增强了 Emer 和他的合作者之前开发的现有搜索引擎，称为 Timeloop。首先，他们添加了一个模型，可以解释加密和身份验证所需的额外计算。&lt;/p>; &lt;p>;然后，他们将搜索问题重新表述为一个简单的数学表达式，这使得 SecureLoop 能够在以下位置找到理想的真实块大小：这是比搜索所有可能选项更有效的方式。&lt;/p>; &lt;p>;“根据您分配此块的方式，不必要的流量可能会增加或减少。如果你巧妙地分配加密块，那么你就可以获取少量的额外数据。”Lee 说道。&lt;/p>; &lt;p>;最后，他们采用了一种启发式技术，确保 SecureLoop 识别出一个能够最大限度提高性能的时间表。整个深度神经网络，而不仅仅是单个层。&lt;/p>; &lt;p>;最后，搜索引擎输出一个加速器计划，其中包括数据平铺策略和身份验证块的大小，这提供了最佳的可能特定神经网络的速度和能源效率。&lt;/p>; &lt;p>;“这些加速器的设计空间巨大。 Kyungmi 所做的是找出一些非常务实的方法来使搜索变得容易处理，这样她就可以找到好的解决方案，而无需彻底搜索空间。”Emer 说。&lt;/p>; &lt;p>;在模拟器中进行测试时，SecureLoop 确定了以下时间表：与其他不考虑安全性的方法相比，速度提高了 33.2%，能量延迟积（与能源效率相关的指标）提高了 50.2%。&lt;/p>; &lt;p>;研究人员还使用 SecureLoop 来探索设计空间如何当考虑到安全性时，加速器会发生变化。 Lee 表示，他们了解到，为加密引擎分配更多的芯片区域并牺牲一些片上内存空间可以带来更好的性能。&lt;/p>; &lt;p>;将来，研究人员希望使用 SecureLoop寻找能够抵御侧信道攻击的加速器设计，这种攻击发生在攻击者可以访问物理硬件时。例如，攻击者可以监视设备的功耗模式以获取秘密信息，即使数据已被加密。他们还扩展了 SecureLoop，以便将其应用于其他类型的计算。&lt;/p>; &lt;p>;这项工作部分由三星电子和韩国高级研究基金会资助。&lt;/p>; </content:encoded><media:content height="260" medium="image" type="image/jpeg" url="https://news.mit.edu/sites/default/files/styles/news_article__cover_image__original/public/images/202310/MIT-SecureLoop-01-press.jpg?itok=R23pWWII" width="390"><media:description type="plain"> SecureLoop 是麻省理工学院开发的搜索引擎，可以识别深度神经网络加速器的最佳设计，从而保护数据安全，同时提高能源效率和提升性能。这可以使设备制造商提高要求苛刻的人工智能应用程序的速度，同时确保敏感数据免受攻击者的攻击。</media:description><media:credit>图片：Jose-Luis Olivares，麻省理工学院</media:credit></media:content><category domain="https://news.mit.edu/topic/research">研究</category><category domain="https://news.mit.edu/topic/cyber-security">网络安全</category><category domain="https://news.mit.edu/topic/privacy">隐私</category><category domain="https://news.mit.edu/topic/electronics">电子产品</category><category domain="https://news.mit.edu/topic/computer-chips">电脑芯片</category><category domain="https://news.mit.edu/topic/data">数据</category><category domain="https://news.mit.edu/topic/computers">计算机科学与技术</category><category domain="https://news.mit.edu/topic/artificial-intelligence2">人工智能</category><category domain="https://news.mit.edu/topic/machine-learning">机器学习</category><category domain="https://news.mit.edu/topic/computer-science-and-artificial-intelligence-laboratory-csail">计算机科学与人工智能实验室（CSAIL） </category><category domain="https://news.mit.edu/topic/electrical-engineering-computer-science-eecs">电气工程与计算机科学（eecs）</category><category domain="https://news.mit.edu/topic/school-engineering">工程学院</category><category domain="https://news.mit.edu/topic/mit-schwarzman-college-computing">麻省理工学院施瓦茨曼计算学院</category></item></channel></rss>